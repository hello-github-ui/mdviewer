"use strict";(self.webpackChunkmdviewer=self.webpackChunkmdviewer||[]).push([[9373],{5433:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"\u4e2a\u4eba\u535a\u5ba2/Flink\u5b89\u88c5\u90e8\u7f72","title":"Flink\u5b89\u88c5\u90e8\u7f72","description":"\u4e0b\u8f7d","source":"@site/docs/\u4e2a\u4eba\u535a\u5ba2/Flink\u5b89\u88c5\u90e8\u7f72.md","sourceDirName":"\u4e2a\u4eba\u535a\u5ba2","slug":"/\u4e2a\u4eba\u535a\u5ba2/Flink\u5b89\u88c5\u90e8\u7f72","permalink":"/mdviewer/docs/\u4e2a\u4eba\u535a\u5ba2/Flink\u5b89\u88c5\u90e8\u7f72","draft":false,"unlisted":false,"editUrl":"https://github.com/hello-github-ui/mdviewer/edit/master/docs/docs/\u4e2a\u4eba\u535a\u5ba2/Flink\u5b89\u88c5\u90e8\u7f72.md","tags":[{"inline":true,"label":"\u4e2a\u4eba\u535a\u5ba2","permalink":"/mdviewer/docs/tags/\u4e2a\u4eba\u535a\u5ba2"}],"version":"current","frontMatter":{"id":"Flink\u5b89\u88c5\u90e8\u7f72","title":"Flink\u5b89\u88c5\u90e8\u7f72","tags":["\u4e2a\u4eba\u535a\u5ba2"]},"sidebar":"tutorialSidebar","previous":{"title":"Facebook-China\u6570\u636e","permalink":"/mdviewer/docs/\u4e2a\u4eba\u535a\u5ba2/Facebook-China\u6570\u636e"},"next":{"title":"Git-commit-\u4e2d\u6dfb\u52a0\u8868\u60c5","permalink":"/mdviewer/docs/\u4e2a\u4eba\u535a\u5ba2/Git-commit-\u4e2d\u6dfb\u52a0\u8868\u60c5"}}');var r=t(4848),a=t(8453);const s={id:"Flink\u5b89\u88c5\u90e8\u7f72",title:"Flink\u5b89\u88c5\u90e8\u7f72",tags:["\u4e2a\u4eba\u535a\u5ba2"]},l="windows",o={},d=[{value:"\u4e0b\u8f7d",id:"\u4e0b\u8f7d",level:2},{value:"\u89e3\u538b",id:"\u89e3\u538b",level:2},{value:"\u542f\u52a8",id:"\u542f\u52a8",level:2},{value:"\u8bbf\u95ee",id:"\u8bbf\u95ee",level:2},{value:"\u547d\u4ee4\u67e5\u770b\u8fd0\u884c\u72b6\u6001",id:"\u547d\u4ee4\u67e5\u770b\u8fd0\u884c\u72b6\u6001",level:2},{value:"\u90e8\u7f72\u4efb\u52a1",id:"\u90e8\u7f72\u4efb\u52a1",level:2},{value:"\u65b9\u5f0f\u4e00\uff0cdashboard \u4e0a\u4f20jar\u5305",id:"\u65b9\u5f0f\u4e00dashboard-\u4e0a\u4f20jar\u5305",level:3},{value:"\u65b9\u5f0f\u4e8c\uff0c\u901a\u8fc7\u624b\u52a8\u8f93\u5165\u547d\u4ee4\u542f\u52a8\u4efb\u52a1",id:"\u65b9\u5f0f\u4e8c\u901a\u8fc7\u624b\u52a8\u8f93\u5165\u547d\u4ee4\u542f\u52a8\u4efb\u52a1",level:3},{value:"\u67e5\u770b\u6240\u6709\u63d0\u4ea4\u7684Job",id:"\u67e5\u770b\u6240\u6709\u63d0\u4ea4\u7684job",level:2},{value:"\u53d6\u6d88\u67d0\u4e2aJob",id:"\u53d6\u6d88\u67d0\u4e2ajob",level:2},{value:"Flink\u90e8\u7f72",id:"flink\u90e8\u7f72",level:2},{value:"Standalone\u6a21\u5f0f",id:"standalone\u6a21\u5f0f",level:3},{value:"Yarn\u6a21\u5f0f",id:"yarn\u6a21\u5f0f",level:3},{value:"Kubernetes\u90e8\u7f72",id:"kubernetes\u90e8\u7f72",level:3},{value:"\u901a\u8fc7\u811a\u672c\u542f\u52a8\u4efb\u52a1",id:"\u901a\u8fc7\u811a\u672c\u542f\u52a8\u4efb\u52a1",level:2},{value:"\u901a\u8fc7\u9875\u9762\u4e0a\u4f20\u4efb\u52a1\u5305\u8fd0\u884c",id:"\u901a\u8fc7\u9875\u9762\u4e0a\u4f20\u4efb\u52a1\u5305\u8fd0\u884c",level:2},{value:"JobManager",id:"jobmanager",level:3},{value:"TaskManager",id:"taskmanager",level:3},{value:"\u4efb\u52a1\u63d0\u4ea4\u6d41\u7a0b",id:"\u4efb\u52a1\u63d0\u4ea4\u6d41\u7a0b",level:3},{value:"\u601d\u8003",id:"\u601d\u8003",level:3},{value:"\u5e76\u884c\u5ea6\uff08Parallelism\uff09",id:"\u5e76\u884c\u5ea6parallelism",level:3},{value:"FLink \u8bfb\u53d6\u3001\u5199\u5165 MySQL \u6570\u636e",id:"flink-\u8bfb\u53d6\u5199\u5165-mysql-\u6570\u636e",level:2},{value:"\u4e3b\u4efb\u52a1 FLink2Mysql",id:"\u4e3b\u4efb\u52a1-flink2mysql",level:4},{value:"\u968f\u673a\u5bc6\u7801\u5de5\u5177\u7c7b",id:"\u968f\u673a\u5bc6\u7801\u5de5\u5177\u7c7b",level:4},{value:"\u751f\u6210\u968f\u673a\u7528\u6237\u6570\u636e\u5de5\u5177\u7c7b",id:"\u751f\u6210\u968f\u673a\u7528\u6237\u6570\u636e\u5de5\u5177\u7c7b",level:4},{value:"\u968f\u673a\u6c49\u5b57\u5de5\u5177\u7c7b",id:"\u968f\u673a\u6c49\u5b57\u5de5\u5177\u7c7b",level:4}];function c(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"windows",children:"windows"})}),"\n",(0,r.jsx)(e.h2,{id:"\u4e0b\u8f7d",children:"\u4e0b\u8f7d"}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8981\u60f3\u8fd0\u884cflink\uff0c\u524d\u63d0\u5fc5\u987b\u5b89\u88c5 JDK1.8x\n\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\uff1a",(0,r.jsx)(e.code,{children:"https://flink.apache.org/zh/downloads.html"}),"\u3002\u6216\u8005\u767e\u5ea6\u4e91\u4e0b\u8f7d\uff1a",(0,r.jsx)(e.a,{href:"https://pan.baidu.com/s/1MXBwNuC-_y8tIqaEWCY1og",children:"\u94fe\u63a5"})," \u63d0\u53d6\u7801: ",(0,r.jsx)(e.code,{children:"jw3e"})]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u89e3\u538b",children:"\u89e3\u538b"}),"\n",(0,r.jsx)(e.p,{children:"\u76f4\u63a5\u89e3\u538b\u4e0b\u8f7d\u4e0b\u6765\u7684\u6587\u4ef6\uff08\u4ee5\u7f51\u76d8\u4e0b\u8f7d\u7684\u4e3a\u4f8b\uff09\uff0c\u7136\u540e\u91cd\u547d\u540d\u4e3a flink \u5373\u53ef\u3002"}),"\n",(0,r.jsx)(e.h2,{id:"\u542f\u52a8",children:"\u542f\u52a8"}),"\n",(0,r.jsxs)(e.p,{children:["\u76f4\u63a5\u8fdb\u5165 ",(0,r.jsx)(e.code,{children:"${flink-home}/bin"})," \u76ee\u5f55\uff0c\u53cc\u51fb ",(0,r.jsx)(e.code,{children:"start-cluster.bat"})," \u5373\u542f\u52a8\u4e86\u3002"]}),"\n",(0,r.jsx)(e.h2,{id:"\u8bbf\u95ee",children:"\u8bbf\u95ee"}),"\n",(0,r.jsxs)(e.p,{children:["\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\uff1a",(0,r.jsx)(e.code,{children:"http://localhost:8081/"})," \u5373\u53ef\u8bbf\u95ee\u3002"]}),"\n",(0,r.jsx)(e.h2,{id:"\u547d\u4ee4\u67e5\u770b\u8fd0\u884c\u72b6\u6001",children:"\u547d\u4ee4\u67e5\u770b\u8fd0\u884c\u72b6\u6001"}),"\n",(0,r.jsxs)(e.p,{children:["\u56e0\u4e3aFlink\u4f9d\u8d56\u4e8eJava\u73af\u5883\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b JVM \u7684\u8fdb\u7a0b\uff0c\u6765\u67e5\u770b\u6240\u6709\u4f7f\u7528 Java \u73af\u5883\u7684\u8fdb\u7a0b\uff1a \u8f93\u5165 ",(0,r.jsx)(e.code,{children:"jps"})," \u5373\u53ef\u3002"]}),"\n",(0,r.jsx)(e.h1,{id:"linux",children:"linux"}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u53c2\u8003\u6587\u7ae0\uff1a",(0,r.jsx)(e.a,{href:"https://www.cnblogs.com/aibabel/p/10937110.html",children:"https://www.cnblogs.com/aibabel/p/10937110.html"})]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u90e8\u7f72\u4efb\u52a1",children:"\u90e8\u7f72\u4efb\u52a1"}),"\n",(0,r.jsx)(e.h3,{id:"\u65b9\u5f0f\u4e00dashboard-\u4e0a\u4f20jar\u5305",children:"\u65b9\u5f0f\u4e00\uff0cdashboard \u4e0a\u4f20jar\u5305"}),"\n",(0,r.jsxs)(e.p,{children:["8081\u754c\u9762\uff0c\u4e0a\u4f20jar\u5305\u540e\uff0c\u70b9\u51fb\u8be5\u4efb\u52a1\u540e\uff0c\u8f93\u5165\u76f8\u5173\u7684\u8fd0\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5982\u679c\u770b\u5230\u4efb\u52a1\u76f4\u63a5\u5931\u8d25\u4e86\uff0c\u90a3\u516b\u6210\u539f\u56e0\u662f\u5f53\u524d\u4efb\u52a1\u6240\u9700\u7684\u53ef\u7528 ",(0,r.jsx)(e.code,{children:"task Slots"})," \u4e0d\u591f\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u3002\u8fdb\u5165 flink_home \u76ee\u5f55\uff0c\u7f16\u8f91\u6587\u4ef6 ",(0,r.jsx)(e.code,{children:"vim conf/flink-conf.yaml"}),"\uff0c\u5c06 ",(0,r.jsx)(e.code,{children:"taskmanager.numberOfTaskSlots"})," \u7684\u503c\u8bbe\u7f6e\u5927\u4e00\u70b9\uff0c\u6bd4\u59824\uff0c\u7136\u540e\u518d\u91cd\u65b0\u4e0a\u4f20jar\u5305\uff0c\u542f\u52a8\u4efb\u52a1\u5373\u53ef\u3002"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u95ee\u9898\uff1a\u90a3\u4e48 ",(0,r.jsx)(e.code,{children:"taskmanager.numberOfTaskSlots"})," \u8bbe\u7f6e\u8be5\u9075\u5faa\u4ec0\u4e48\u539f\u5219\u5462\uff1f\u6216\u8005\u8bf4\u600e\u4e48\u8bbe\u7f6e\u6bd4\u8f83\u597d\u5462\uff1f"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"\u65b9\u5f0f\u4e8c\u901a\u8fc7\u624b\u52a8\u8f93\u5165\u547d\u4ee4\u542f\u52a8\u4efb\u52a1",children:"\u65b9\u5f0f\u4e8c\uff0c\u901a\u8fc7\u624b\u52a8\u8f93\u5165\u547d\u4ee4\u542f\u52a8\u4efb\u52a1"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"./bin/flink  run  -c  com.example.wc.WordCountDataStream  -p  3  /opt/apps/project/flink/flink-quickstart-1.0-SNAPSHOT.jar  --host 192.168.80.100  --port 7777 "})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"-c\uff1a\u8868\u793a\u8fd0\u884c\u54ea\u4e00\u4e2a\u7c7b\uff1b-p\uff1a\u8868\u793a\u5e76\u884c\u5ea6\uff08parallelism\uff09\uff1b\u4e00\u5b9a\u8981\u624b\u52a8\u6307\u660ejar\u5305\u7684\u4f4d\u7f6e\u3002"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u67e5\u770b\u6240\u6709\u63d0\u4ea4\u7684job",children:"\u67e5\u770b\u6240\u6709\u63d0\u4ea4\u7684Job"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"./bin/flink  list  -a"})}),"\n",(0,r.jsx)(e.h2,{id:"\u53d6\u6d88\u67d0\u4e2ajob",children:"\u53d6\u6d88\u67d0\u4e2aJob"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"./bin/flink  cancel 7c0c4254b1e25f0473ce4a9199287744"})}),"\n",(0,r.jsx)(e.h2,{id:"flink\u90e8\u7f72",children:"Flink\u90e8\u7f72"}),"\n",(0,r.jsx)(e.h3,{id:"standalone\u6a21\u5f0f",children:"Standalone\u6a21\u5f0f"}),"\n",(0,r.jsx)(e.h3,{id:"yarn\u6a21\u5f0f",children:"Yarn\u6a21\u5f0f"}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u4ee5yarn\u6a21\u5f0f\u90e8\u7f72Flink\u4efb\u52a1\u65f6\uff0c\u8981\u6c42",(0,r.jsx)(e.strong,{children:"Flink\u662f\u6709Hadoop\u652f\u6301\u7684\u7248\u672c\uff0cHadoop\u73af\u5883\u9700\u8981\u4fdd\u8bc1\u7248\u672c\u57282.2\u4ee5\u4e0a\uff0c\u5e76\u4e14\u96c6\u7fa4\u4e2d\u5b89\u88c5\u6709HDFS\u670d\u52a1"}),"\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"kubernetes\u90e8\u7f72",children:"Kubernetes\u90e8\u7f72"}),"\n",(0,r.jsx)(e.h1,{id:"\u8fd0\u884cdemo",children:"\u8fd0\u884cdemo"}),"\n",(0,r.jsx)(e.p,{children:"flink\u63d0\u4f9b\u4e24\u79cd\u4efb\u52a1\u8fd0\u884c\u5165\u53e3\uff1a"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"flink.bat"})," \u811a\u672c\u542f\u52a8\u4efb\u52a1\u7a0b\u5e8f"]}),"\n",(0,r.jsx)(e.li,{children:"\u9875\u9762\u4e0a\u4f20\u4efb\u52a1\u7a0b\u5e8f\u5305\u8fd0\u884c"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u901a\u8fc7\u811a\u672c\u542f\u52a8\u4efb\u52a1",children:"\u901a\u8fc7\u811a\u672c\u542f\u52a8\u4efb\u52a1"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"flink.bat run ../example/batch/WordCount.jar\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://pic.imgdb.cn/item/6193d2822ab3f51d91bef555.jpg",alt:""})}),"\n",(0,r.jsx)(e.h2,{id:"\u901a\u8fc7\u9875\u9762\u4e0a\u4f20\u4efb\u52a1\u5305\u8fd0\u884c",children:"\u901a\u8fc7\u9875\u9762\u4e0a\u4f20\u4efb\u52a1\u5305\u8fd0\u884c"}),"\n",(0,r.jsx)(e.p,{children:"\u4e0a\u4f20\u4efb\u52a1\u7a0b\u5e8f\u5305"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://pic.imgdb.cn/item/6193d2052ab3f51d91bec4e2.jpg",alt:""})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd0\u884c\u4efb\u52a1\u7a0b\u5e8f\u5305"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://pic.imgdb.cn/item/6193d2412ab3f51d91bedb2c.jpg",alt:""})}),"\n",(0,r.jsx)(e.p,{children:"\u4efb\u52a1\u7ba1\u7406\u76d1\u63a7"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://pic.imgdb.cn/item/6193d25f2ab3f51d91bee7f6.jpg",alt:""})}),"\n",(0,r.jsx)(e.h3,{id:"jobmanager",children:"JobManager"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\u2460JobManager\u63a7\u5236\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u7684\u4e3b\u8fdb\u7a0b\uff0c\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f1a\u88ab\u4e00\u4e2a\u4e0d\u540c\u7684JobManager\u6240\u63a7\u5236\u6267\u884c\uff0c\n\u200b\t\u2461JobManager\u4f1a\u5148\u63a5\u6536\u5230\u8981\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5305\u62ec\uff1a\u4f5c\u4e1a\u56fe\uff08JobGraphy\uff09\uff0c\u903b\u8f91\u6570\u636e\u6d41\u56fe\uff0c\u548c\u6253\u5305\u4e86\u6240\u6709\u7684\u7c7b\u5e93\u548c\u5176\u5b83\u8d44\u6e90\u7684JAR\u5305\u3002\n\u200b\t\u2462JobManager\u4f1a\u628aJobGraphy\u8f6c\u6362\u6210\u4e00\u4e2a\u7269\u7406\u5c42\u9762\u7684\u6570\u636e\u6d41\u56fe\uff0c\u8fd9\u4e2a\u56fe\u88ab\u53eb\u505a \u6267\u884c\u56fe\uff0c\u5305\u542b\u4e86\u6240\u6709\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u7684\u4efb\u52a1\u3002\n\u200b\t\u2463JobManager\u4f1a\u5411 resourceManager \u7533\u8bf7\u6267\u884c\u4efb\u52a1\u6240\u5fc5\u8981\u7684\u8d44\u6e90\uff0c\u5373 taskManager \u4e0a\u7684 slot\uff08\u63d2\u69fd\uff09\u3002\u4e00\u65e6\u5b83\u83b7\u53d6\u5230\u4e86\u8db3\u591f\u7684\u8d44\u6e90\uff0c\u5c31\u4f1a\u5c06\u6267\u884c\u56fe\u5206\u53d1\u5230\u771f\u6b63\u8fd0\u884c\u4ed6\u4eec\u7684\nTaskManager\u4e0a\u3002\uff08\u4e5f\u5c31\u662f\u8bf4\u771f\u6b63\u6267\u884c\u4efb\u52a1\u7684\u662f\u8c01\uff1f\u662ftaskManager\uff09\u3002\u800c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0cJobManager\u4f1a\u8d1f\u8d23\u6240\u6709\u9700\u8981\u4e2d\u592e\u534f\u8c03\u8d44\u6e90\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8bf4\u68c0\u67e5\u70b9\uff08checkPoint\uff09\u7684\u534f\u8c03\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"taskmanager",children:"TaskManager"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Flink\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b\u3002\u901a\u5e38\u5728Flink\u4e2d\u4f1a\u6709\u591a\u4e2aTaskManager\u8fd0\u884c\uff0c\u6bcf\u4e00\u4e2aTaskManager\u90fd\u5305\u542b\u4e86\u4e00\u5b9a\u6570\u91cf\u7684\u63d2\u69fd\uff08slots\uff09\u3002",(0,r.jsx)(e.strong,{children:"\u63d2\u69fd\u7684\u6570\u91cf\u9650\u5236\u4e86TaskManager\u80fd\u591f\u6267\u884c\u7684\u4efb\u52a1\u6570\u91cf"}),"\u3002"]}),"\n",(0,r.jsx)(e.li,{children:"\u542f\u52a8\u4e4b\u540e\uff0cTaskManager\u4f1a\u5411\u8d44\u6e90\u7ba1\u7406\u5668\u6ce8\u518c\u5b83\u7684\u63d2\u69fd\uff0c\u6536\u5230\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6307\u4ee4\u540e\uff0cTaskManager\u5c31\u4f1a\u5c06\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u63d2\u69fd\u63d0\u4f9b\u7ed9JobManager\u8c03\u7528\u3002JobManager\u5c31\u53ef\u4ee5\u5411\u63d2\u69fd\u5206\u914d\u4efb\u52a1\uff08tasks\uff09\u6765\u6267\u884c\u4e86\u3002"}),"\n",(0,r.jsx)(e.li,{children:"\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2aTaskManager\u53ef\u4ee5\u8ddf\u5176\u5b83\u8fd0\u884c\u540c\u4e00\u5e94\u7528\u7a0b\u5e8f\u7684TaskManager\u4ea4\u6362\u6570\u636e\u3002"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"\u4efb\u52a1\u63d0\u4ea4\u6d41\u7a0b",children:"\u4efb\u52a1\u63d0\u4ea4\u6d41\u7a0b"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://pic.imgdb.cn/item/6196048f2ab3f51d911d45d3.png",alt:""})}),"\n",(0,r.jsx)(e.h3,{id:"\u601d\u8003",children:"\u601d\u8003"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u600e\u6837\u5b9e\u73b0\u5e76\u884c\u8ba1\u7b97\uff1f\u8bbe\u7f6e\u5e76\u884c\u4efb\u52a1\uff0c\u5206\u914d\u5230slot\u4e0a\u6267\u884c\uff0c\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u4e0d\u540c\u7684slot\u6267\u884c\uff0c\u591a\u7ebf\u7a0b\u6267\u884c\u3002"}),"\n",(0,r.jsx)(e.li,{children:"\u5e76\u884c\u7684\u4efb\u52a1\uff0c\u9700\u8981\u5360\u7528\u591a\u5c11slot\uff1f\u8ddf\u5f53\u524d\u6240\u6709\u4efb\u52a1\u4e2d\u6700\u5927\u4efb\u52a1\u7684\u5e76\u884c\u5ea6\u76f8\u5173\u3002"}),"\n",(0,r.jsx)(e.li,{children:"\u4e00\u4e2a\u6d41\u5904\u7406\u7a0b\u5e8f\uff0c\u5230\u5e95\u5305\u542b\u591a\u5c11\u4e2a\u4efb\u52a1\uff1f"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"\u5e76\u884c\u5ea6parallelism",children:"\u5e76\u884c\u5ea6\uff08Parallelism\uff09"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u4e00\u4e2a\u7279\u5b9a\u7b97\u5b50\u7684\u5b50\u4efb\u52a1\uff08subtask\uff09\u7684\u4e2a\u6570\u88ab\u79f0\u4e4b\u4e3a\u5176\u5e76\u884c\u5ea6\uff08parallelism\uff09\u3002\n\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2aStream\u7684\u5e76\u884c\u5ea6\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u5176\u6240\u6709\u7b97\u5b50\u4e2d\u6700\u5927\u7684\u5e76\u884c\u5ea6\u3002"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"flink-\u8bfb\u53d6\u5199\u5165-mysql-\u6570\u636e",children:"FLink \u8bfb\u53d6\u3001\u5199\u5165 MySQL \u6570\u636e"}),"\n",(0,r.jsx)(e.p,{children:"\u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\uff1a"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"\u751f\u6210\u968f\u673a\u7684\u7528\u6237\u6570\u636e\uff08\u59d3\u540d\uff0c\u6635\u79f0\uff0c\u5bc6\u7801\uff0c\u90ae\u7bb1\u7b49\u5b57\u6bb5\uff09\uff0c\u5e76\u4fdd\u5b58\u5230 user.txt \u6587\u672c\u4e2d"}),"\n",(0,r.jsx)(e.li,{children:"\u91c7\u7528Flink\uff0c\u8bfb\u53d6\u8be5txt\u6587\u672c\u6587\u4ef6\u4f5c\u4e3a\u6570\u636e\u8f93\u5165\u6d41\uff0c\u5904\u7406\u6620\u5c04\uff0c\u5c06\u6570\u636e\u4fdd\u5b58\u5230 MySQL \u6570\u636e\u8868\u4e2d"}),"\n",(0,r.jsx)(e.li,{children:"\u901a\u8fc7Flink\uff0c\u4ece MySQL \u4e2d\u518d\u8bfb\u53d6\u8be5\u8868\uff0c\u5c06\u6570\u636e\u6253\u5370\u8f93\u51fa\u5728\u63a7\u5236\u53f0\u3002"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"\u5176\u4e2d\uff0c\u4f1a\u7528\u5230\u51e0\u4e2a\u5de5\u5177\u7c7b\uff0c\u6211\u90fd\u653e\u5230\u4e0b\u9762\u4e86\u3002"}),"\n",(0,r.jsx)(e.h4,{id:"\u4e3b\u4efb\u52a1-flink2mysql",children:"\u4e3b\u4efb\u52a1 FLink2Mysql"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'package com.example.tool;\n\n\nimport org.apache.flink.api.common.functions.MapFunction;\nimport org.apache.flink.api.common.typeinfo.BasicTypeInfo;\nimport org.apache.flink.api.common.typeinfo.TypeInformation;\nimport org.apache.flink.api.java.DataSet;\nimport org.apache.flink.api.java.ExecutionEnvironment;\nimport org.apache.flink.api.java.io.jdbc.JDBCInputFormat;\nimport org.apache.flink.api.java.io.jdbc.JDBCOutputFormat;\nimport org.apache.flink.api.java.tuple.Tuple7;\nimport org.apache.flink.api.java.tuple.Tuple8;\nimport org.apache.flink.api.java.typeutils.RowTypeInfo;\nimport org.apache.flink.types.Row;\nimport org.junit.Test;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.nio.charset.StandardCharsets;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\n/**\n * @author 030\n * @date 10:22 2021/11/20\n * @description\n */\npublic class Flink2Mysql {\n\n    /*\u57fa\u672c\u5c5e\u6027*/\n    private final static String username = "root";\n    private final static String password = "123456";\n    private final static String driverName = "com.mysql.cj.jdbc.Driver";\n    private final static String dbURL = "jdbc:mysql://192.168.80.100:3306/flink-test";\n\n\n    // \u6587\u4ef6\n    private final static String filePath = "E:\\\\github-project\\\\flink-quickstart\\\\src\\\\main\\\\resources\\\\user.txt";\n\n\n    @Test\n    public void test() throws Exception {\n        // 1. \u5199\u5165\u968f\u673a\u6570\u636e\u5230 txt \u4e2d\n        saveToTxt();\n\n        // 2. \u5c06 txt \u6570\u636e\u5199\u5165\u5230 MySQL \u4e2d\n        writeToDB();\n\n        // \u4ece MySQL \u4e2d\u8bfb\u53d6 user \u6570\u636e\n        readDBToFlink();\n    }\n\n\n    /**\n     * \u4ece MySQL \u4e2d\u8bfb\u53d6 user \u6570\u636e\u5230 Flink \u4e2d\n     */\n    private static void readDBToFlink() throws Exception {\n        // \u521b\u5efa\u6267\u884c\u73af\u5883\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        // \u9884\u5b9a\u4e49\u6570\u636e\u5e93\u5b57\u6bb5\n        TypeInformation[] fieldTypes = new TypeInformation[]{\n                BasicTypeInfo.LONG_TYPE_INFO,   // \u4e3b\u952eid\u662fbigint\uff0c\u5bf9\u5e94\u7684Java\u6570\u636e\u7c7b\u578b\u662fLong\n                BasicTypeInfo.STRING_TYPE_INFO, // username\n                BasicTypeInfo.STRING_TYPE_INFO, // nickname\n                BasicTypeInfo.STRING_TYPE_INFO, // password\n                BasicTypeInfo.INT_TYPE_INFO, // status\n                BasicTypeInfo.STRING_TYPE_INFO, // email\n                BasicTypeInfo.STRING_TYPE_INFO, // userface\n                BasicTypeInfo.STRING_TYPE_INFO // regTime\n\n        };\n        // \u6784\u9020 RowTypeInfo\n        RowTypeInfo rowTypeInfo = new RowTypeInfo(fieldTypes);\n        // \u4ecetable\u521b\u5efa\u4e00\u4e2a\u8f93\u5165\u6570\u636e\u6d41\n        DataSet<Row> readTable = env.createInput(\n                JDBCInputFormat\n                        .buildJDBCInputFormat()\n                        .setDrivername(driverName)\n                        .setDBUrl(dbURL)\n                        .setUsername(username)\n                        .setPassword(password)\n                        .setQuery("select * from user")\n                        .setRowTypeInfo(rowTypeInfo)\n                        .finish()\n        );\n        // \u8bfb\u53d6\u65f6\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u5b9e\u73b0MapFunction\n        DataSet<Tuple8<Long, String, String, String, Integer, String, String, String>> dataSet = readTable.map(new MyMapFunctionReadImpl());\n        // \u8f93\u51fa\n        System.out.println("\\033[32;4m" + "===================================\u4eceMySQL\u4e2d\u8bfb\u53d6\u6570\u636e start=======================================" + "\\033[0m");\n        dataSet.print();\n        System.out.println("\\033[32;4m" + "=====================================\u4eceMySQL\u4e2d\u8bfb\u53d6\u6570\u636e end==========================================" + "\\033[0m");\n    }\n\n\n    /**\n     * \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u5e76\u5199\u5165\u6570\u636e\u5230 MySQL \u4e2d\n     */\n    private static void writeToDB() throws Exception {\n        // \u521b\u5efa\u6267\u884c\u73af\u5883\n        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n        /*\n         * \u8fd9\u91cc\u6709\u4e00\u4e2a\u5de8\u5751\uff1a\u5f53\u4f7f\u7528 readCsvFile()\u8bfb\u53d6\u6587\u4ef6\u65f6\uff0ccsv\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u9ed8\u8ba4\u4f7f\u7528\u9017\u53f7\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u5e76\u4e14\u5206\u9694\u7b26\u4e4b\u540e\u4e0d\u53ef\u4ee5\u6709\u7a7a\u683c\n         * \u7531\u4e0a\u53ef\u77e5\uff0c\u4e0d\u7ba1\u4f60\u7684 1.txt \u6587\u4ef6\u4e2d\u4f7f\u7528\u4ec0\u4e48\u4f5c\u4e3a\u5206\u9694\u7b26\u90fd\u65e0\u6240\u8c13\uff0c\u4f46\u5728\u5206\u9694\u7b26\u4e4b\u540e\u5fc5\u987b\u4e0d\u80fd\u6709\u7a7a\u683c\n         * */\n        DataSet<Row> write = env\n                .readCsvFile(filePath)\n                .fieldDelimiter(",")\n                .types(String.class, String.class, String.class, Integer.class, String.class, String.class, String.class) // \u6253\u6563txt\u6570\u636e\u6d41\u4e4b\u540e\u67097\u4e2a\u5c5e\u6027\n                .map(new MyMapFunctionWriteImpl()); // \u5199\u5165\u65f6\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u5b9e\u73b0MapFunction\n        // \u5199\u5165 db\n        write.output(\n                JDBCOutputFormat\n                        .buildJDBCOutputFormat()\n                        .setDrivername(driverName)\n                        .setDBUrl(dbURL)\n                        .setUsername(username)\n                        .setPassword(password)\n                        .setQuery("insert into user(username, nickname, password, status, email, userface, regTime) values (?, ?, ?, ?, ?, ?, ?)")\n                        .finish()\n        );\n\n        System.out.println("\\033[32;4m" + "------------------------------------------\u4ecetxt\u6587\u672c\u5199\u5165\u6570\u636e\u5230MySQL\u4e2d start---------------------------" + "\\033[0m");\n        // \u6267\u884c\n        env.execute();\n\n        System.out.println("\\033[32;4m" + "---------------------------------------------\u4ecetxt\u6587\u672c\u5199\u5165\u6570\u636e\u5230MySQL\u4e2d end------------------------------" + "\\033[0m");\n    }\n\n\n    /**\n     * \u968f\u673a\u751f\u6210\u6c49\u5b57\uff0c\u8f93\u51fa\u5230\u6587\u4ef6 1.txt \u4e2d\n     */\n    private static void saveToTxt() throws Exception {\n        // \u9ed8\u8ba4\u751f\u6210 3 \u4f4d\u5427\n        String username, nickname, password, email, userface, regTime, status;\n        FileOutputStream fis = new FileOutputStream(new File(filePath));\n        // \u5c31\u5199 50 \u884c\u5427\n        for (int i = 0; i < 50; i++) {\n            // username 3\u4f4d\u540d\u5b57\n            username = RandomUserDataUtil.getChineseName() + ",";\n            // nickname 5\u4f4d\u6c49\u5b57\n            nickname = ChineseTool.getRandomChinese(5) + ",";\n            // password \u5bc6\u7801\u957f\u5ea6\u8bbe\u7f6e 12 \u4f4d\n            password = PWDTool.getRandomPwd(12) + ",";\n            // status\n            status = "1" + ",";\n            // email\n            email = RandomUserDataUtil.getEmail(9, 12) + ",";\n            // userface \u4ee5\u968f\u673a\u56fe\u7247\u4e3a\u4f8b\n            userface = RandomUserDataUtil.getImg() + ",";\n            // regTime\n            SimpleDateFormat sdf = new SimpleDateFormat("yyyy\u5e74MM\u6708dd\u65e5");\n            regTime = sdf.format(new Date());\n            // \u5199\u5165\u6570\u636e\u5230 txt\u6587\u4ef6\uff0c\u6ce8\u610f\u5199\u5165\u987a\u5e8f\u5fc5\u987b\u548cSQL\u4e2d\u7684\u5b57\u6bb5\u987a\u5e8f\u4e00\u81f4\uff0cid \u662f\u81ea\u589e\u957f\u7684\uff0c\u4e0d\u9700\u8981\u751f\u6210\n            // id username nickname password status email userface regTime\n            fis.write(username.getBytes());\n            fis.write(nickname.getBytes());\n            fis.write(password.getBytes());\n            fis.write(status.getBytes());\n            fis.write(email.getBytes());\n            fis.write(userface.getBytes());\n            fis.write(regTime.getBytes());\n            // \u5199\u5b8c\u4e00\u884c\u540e\uff0c\u5199\u5165\u6362\u884c\u7b26 \u53c2\u8003: https://blog.51cto.com/u_11585002/2713634\n//            String newLine = System.getProperty("line.separator");\n//            fis.write(newLine.getBytes());\n            fis.write("\\r\\n".getBytes());\n        }\n        fis.close();\n    }\n\n\n    /**\n     * \u81ea\u5b9a\u4e49\u5b9e\u73b0 MapFunction \u7684\u4e1a\u52a1\u903b\u8f91\n     * \u6ce8\u610f\uff0c\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u7528\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8f93\u5165\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8f93\u51fa\u7c7b\u578b\uff0c\u5373\u8fd4\u56de\u7c7b\u578b\u503c\n     */\n    private static class MyMapFunctionWriteImpl implements MapFunction<Tuple7<String, String, String, Integer, String, String, String>, Row> {\n        // \u8f93\u5165 Tuple2<String, Integer>\uff0c \u8f93\u51fa Row\n        // \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u7684 UserData \u603b\u5171\u67098\u4e2a\u5b57\u6bb5\uff0c\u4f46\u662fid\u5b57\u6bb5\u662f\u81ea\u589e\u957f\u7684\uff0c\u56e0\u6b64\u5728\u5199\u5165MySQL\u65f6\u53ea\u9700\u89817\u5143\u7ec4\n        // int id, String username, nickname, password, email, userface, regTime, int status;\n        // \u5bf9\u5e94\u76847\u5143\u7ec4\u5206\u522b\u662f\uff1a\u5fc5\u987b\u548csql\u521b\u5efa\u65f6\u7684\u5b57\u6bb5\u987a\u5e8f\u4e00\u81f4\n        // String, String, String, String, Integer, String, String\n        @Override\n        public Row map(Tuple7<String, String, String, Integer, String, String, String> value) {\n            Row row = new Row(7);\n            row.setField(0, value.f0.getBytes(StandardCharsets.UTF_8));\n            row.setField(1, value.f1.getBytes(StandardCharsets.UTF_8));\n            row.setField(2, value.f2.getBytes(StandardCharsets.UTF_8));\n            row.setField(3, value.f3.byteValue());\n            row.setField(4, value.f4.getBytes(StandardCharsets.UTF_8));\n            row.setField(5, value.f5.getBytes(StandardCharsets.UTF_8));\n            row.setField(6, value.f6.getBytes(StandardCharsets.UTF_8));\n            return row;\n        }\n    }\n\n\n    /**\n     * \u81ea\u5b9a\u4e49\u5b9e\u73b0 MapFunction \u7684\u4e1a\u52a1\u903b\u8f91\n     */\n    private static class MyMapFunctionReadImpl implements MapFunction<Row, Tuple8<Long, String, String, String, Integer, String, String, String>> {\n        // \u5728\u4eceMySQL\u4e2d\u8bfb\u53d6\u6570\u636e\u65f6\uff0cUser \u8868\u91cc\u9762\u603b\u5171\u662f8\u4e2a\u5b57\u6bb5\uff0c\u8fd9\u65f6\u5c31\u662f\u4e00\u4e2a8\u5143\u7ec4\uff0c\u9700\u8981\u5c06\u4e3b\u952eid\u5b57\u6bb5\u52a0\u4e0a\n        // \u5bf9\u5e94\u76848\u5143\u7ec4\u5206\u522b\u662f\uff1a\u6ce8\u610f\u8fd9\u4e2a\u5bf9\u5e94\u987a\u5e8f\u5173\u7cfb\u5fc5\u987b\u548c\u6570\u636e\u5e93\u4e00\u6837\uff08\u5373\u7b2c\u4e00\u4e2a\u4ec0\u4e48\u6570\u636e\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u4ec0\u4e48\u7c7b\u578b\u7b49\uff09\n        // Long, String, String, String, Integer, String, String  db\u548cjava\u6570\u636e\u5bf9\u5e94\u7c7b\u578b\u53c2\u770b Alibaba Java\u5f00\u53d1\u624b\u518c\n        @Override\n        public Tuple8<Long, String, String, String, Integer, String, String, String> map(Row row) {\n            Long id = Long.valueOf(row.getField(0).toString());   // id\n            String username = row.getField(1).toString();   // username\n            String nickname = row.getField(2).toString();    // nickname\n            String password = row.getField(3).toString();   // password\n            Integer status = Integer.valueOf(row.getField(4).toString());     // status\n            String email = row.getField(5).toString();   // email\n            String userface = row.getField(6).toString();    // userface\n            String regTime = row.getField(7).toString();    // regTime\n\n            // \u5c01\u88c5\u8bfb\u53d6\u7684\u8fd4\u56de\u7ed3\u679c\n            return new Tuple8<>(id, username, nickname, password, status, email, userface, regTime);\n        }\n    }\n\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff0c\u90fd\u5728\u4ee3\u7801\u4e2d\u6709\u6807\u6ce8\u3002"}),"\n",(0,r.jsx)(e.h4,{id:"\u968f\u673a\u5bc6\u7801\u5de5\u5177\u7c7b",children:"\u968f\u673a\u5bc6\u7801\u5de5\u5177\u7c7b"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'package com.example.tool;\n\n\nimport org.junit.Test;\n\nimport java.security.SecureRandom;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\n\n/**\n * @author 030\n * @date 10:56 2021/11/20\n * @description\n */\npublic class PWDTool {\n\n    // \u4e0d\u5141\u8bb8\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\n    private PWDTool() {\n    }\n\n    /**\n     * \u751f\u6210\u968f\u673a\u5bc6\u7801\u5de5\u5177\u7c7b\n     * \u5bc6\u7801\u8981\u6c42\uff1a\n     * \u5fc5\u987b\u8981\u5305\u542b\u5927\u5199\u5b57\u7b26\u3001\u5c0f\u5199\u5b57\u7b26\u3001\u6570\u5b57\u3001\u7279\u6b8a\u7b26\u53f7\uff0c\u5bc6\u7801\u957f\u5ea6\u5728 8-20 \u4f4d\u3002\n     */\n\n    private static final String lowStr = "abcdefghijklmnopqrstuvwxyz";\n    private static final String specialStr = "~!@#$%^&*()_+/-=[]{};:\'<>?.";\n    private static final String numStr = "0123456789";\n\n\n    // \u6307\u5b9a\u957f\u5ea6\uff0c\u968f\u673a\u751f\u6210\u590d\u6742\u5bc6\u7801\n\n    /**\n     * \u63d0\u4f9b\u5bf9\u5916\u7684\u63a5\u53e3\uff1a\u751f\u6210\u6307\u5b9a\u957f\u5ea6\u7684\u590d\u6742\u5bc6\u7801\n     *\n     * @param pwdLength\n     * @return\n     */\n    public static String getRandomPwd(int pwdLength) {\n        if (pwdLength > 20 || pwdLength < 8) {\n            System.out.println("\u5bc6\u7801\u957f\u5ea6\u4e0d\u6ee1\u8db3\u8981\u6c42");\n            return "";\n        }\n        // \u5148\u6ee1\u8db3\u5fc5\u987b\u6761\u4ef6\uff1a\u5927\u5199\u5b57\u7b26\uff0c\u5c0f\u5199\u5b57\u7b26\uff0c\u6570\u5b57\uff0c\u7279\u6b8a\u7b26\u53f7\u5404\u4e00\u4e2a\n        List<Character> list = new ArrayList<>(pwdLength);\n        list.add(getLowChar());\n        list.add(getUpperChar());\n        list.add(getNumChar());\n        list.add(getSpecialChar());\n\n        // \u4ece4-\u5bc6\u7801\u4f4d\u6570\uff0c\u968f\u673a\u751f\u6210\n        for (int i = 4; i < pwdLength; i++) {\n            SecureRandom random = new SecureRandom();\n            // \u4ea7\u751f0-4\u4e4b\u95f4\u7684\u968f\u673aint\u503c\uff08\u5305\u542b0\uff0c\u4e0d\u5305\u542b4\uff09\n            int funNum = random.nextInt(4);\n            list.add(getRandomChar(funNum));\n        }\n\n        // \u6253\u4e71\u5b57\u7b26\u6392\u5217\u987a\u5e8f\n        Collections.shuffle(list);\n\n        // \u5c06 List  \u8f6c\u4e3a String \u5b57\u7b26\u4e32\u8f93\u51fa\n        StringBuilder stringBuilder = new StringBuilder(list.size());\n        for (Character c : list) {\n            stringBuilder.append(c);\n        }\n\n        return stringBuilder.toString();\n    }\n\n\n    // \u968f\u673a\u83b7\u53d6\u5b57\u7b26\u4e32\u5b57\u7b26\n    private static char getRandomChar(String str) {\n        SecureRandom random = new SecureRandom();\n        return str.charAt(random.nextInt(str.length()));\n    }\n\n    // \u968f\u673a\u83b7\u53d6\u5c0f\u5199\u5b57\u7b26\n    private static char getLowChar() {\n        return getRandomChar(lowStr);\n    }\n\n    // \u968f\u673a\u83b7\u53d6\u5927\u5199\u5b57\u7b26\n    private static char getUpperChar() {\n        return Character.toUpperCase(getLowChar());\n    }\n\n    // \u968f\u673a\u83b7\u53d6\u6570\u5b57\u5b57\u7b26\n    private static char getNumChar() {\n        return getRandomChar(numStr);\n    }\n\n    // \u968f\u673a\u83b7\u53d6\u7279\u6b8a\u5b57\u7b26\n    private static char getSpecialChar() {\n        return getRandomChar(specialStr);\n    }\n\n    //\u6307\u5b9a\u8c03\u7528\u5b57\u7b26\u51fd\u6570\n    private static char getRandomChar(int funNum) {\n        switch (funNum) {\n            case 0:\n                return getLowChar();\n            case 1:\n                return getUpperChar();\n            case 2:\n                return getNumChar();\n            default:\n                return getSpecialChar();\n        }\n    }\n\n    // \u6d4b\u8bd5\n    @Test\n    public void pwdTest() {\n        for (int i = 0; i < 10; i++) {\n            System.out.println(getRandomPwd(10));\n        }\n    }\n\n}\n'})}),"\n",(0,r.jsx)(e.h4,{id:"\u751f\u6210\u968f\u673a\u7528\u6237\u6570\u636e\u5de5\u5177\u7c7b",children:"\u751f\u6210\u968f\u673a\u7528\u6237\u6570\u636e\u5de5\u5177\u7c7b"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'package com.example.tool;\n\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONObject;\nimport org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClientBuilder;\nimport org.apache.http.util.EntityUtils;\nimport org.junit.Test;\n\nimport java.text.SimpleDateFormat;\nimport java.util.*;\n\n/**\n * \u53c2\u8003\uff1a\u4ee3\u7801\u5148\u950b\u7f51: https://www.codeleading.com/article/38615255660/\n * @author 030\n * @date 11:14 2021/11/20\n * @description \u968f\u673a\u4e2d\u6587\u59d3, \u540d\n */\npublic class RandomUserDataUtil {\n    //\u767e\u5bb6\u59d3\n    private final static String[] firstNames = {\n            "\u8d75", "\u94b1", "\u5b59", "\u674e", "\u5468", "\u5434", "\u90d1", "\u738b", "\u51af", "\u9648", "\u891a", "\u536b", "\u848b", "\u6c88", "\u97e9", "\u6768", "\u6731", "\u79e6", "\u5c24", "\u8bb8",\n\n            "\u4f55", "\u5415", "\u65bd", "\u5f20", "\u5b54", "\u66f9", "\u4e25", "\u534e", "\u91d1", "\u9b4f", "\u9676", "\u59dc", "\u621a", "\u8c22", "\u90b9", "\u55bb", "\u67cf", "\u6c34", "\u7aa6", "\u7ae0", "\u4e91", "\u82cf", "\u6f58", "\u845b", "\u595a", "\u8303", "\u5f6d", "\u90ce",\n\n            "\u9c81", "\u97e6", "\u660c", "\u9a6c", "\u82d7", "\u51e4", "\u82b1", "\u65b9", "\u4fde", "\u4efb", "\u8881", "\u67f3", "\u9146", "\u9c8d", "\u53f2", "\u5510", "\u8d39", "\u5ec9", "\u5c91", "\u859b", "\u96f7", "\u8d3a", "\u502a", "\u6c64", "\u6ed5", "\u6bb7",\n\n            "\u7f57", "\u6bd5", "\u90dd", "\u90ac", "\u5b89", "\u5e38", "\u4e50", "\u4e8e", "\u65f6", "\u5085", "\u76ae", "\u535e", "\u9f50", "\u5eb7", "\u4f0d", "\u4f59", "\u5143", "\u535c", "\u987e", "\u5b5f", "\u5e73", "\u9ec4", "\u548c",\n\n            "\u7a46", "\u8427", "\u5c39", "\u59da", "\u90b5", "\u6e5b", "\u6c6a", "\u7941", "\u6bdb", "\u79b9", "\u72c4", "\u7c73", "\u8d1d", "\u660e", "\u81e7", "\u8ba1", "\u4f0f", "\u6210", "\u6234", "\u8c08", "\u5b8b", "\u8305", "\u5e9e", "\u718a", "\u7eaa", "\u8212",\n\n            "\u5c48", "\u9879", "\u795d", "\u8463", "\u6881", "\u675c", "\u962e", "\u84dd", "\u95f5", "\u5e2d", "\u5b63", "\u9ebb", "\u5f3a", "\u8d3e", "\u8def", "\u5a04", "\u5371", "\u6c5f", "\u7ae5", "\u989c", "\u90ed", "\u6885", "\u76db", "\u6797", "\u5201", "\u949f",\n\n            "\u5f90", "\u90b1", "\u9a86", "\u9ad8", "\u590f", "\u8521", "\u7530", "\u6a0a", "\u80e1", "\u51cc", "\u970d", "\u865e", "\u4e07", "\u652f", "\u67ef", "\u661d", "\u7ba1", "\u5362", "\u83ab", "\u7ecf", "\u623f", "\u88d8", "\u7f2a", "\u5e72", "\u89e3", "\u5e94",\n\n            "\u5b97", "\u4e01", "\u5ba3", "\u8d32", "\u9093", "\u90c1", "\u5355", "\u676d", "\u6d2a", "\u5305", "\u8bf8", "\u5de6", "\u77f3", "\u5d14", "\u5409", "\u94ae", "\u9f9a", "\u7a0b", "\u5d47", "\u90a2", "\u6ed1", "\u88f4", "\u9646", "\u8363", "\u7fc1", "\u8340",\n\n            "\u7f8a", "\u4e8e", "\u60e0", "\u7504", "\u66f2", "\u5bb6", "\u5c01", "\u82ae", "\u7fbf", "\u50a8", "\u9773", "\u6c72", "\u90b4", "\u7cdc", "\u677e", "\u4e95", "\u6bb5", "\u5bcc", "\u5deb", "\u4e4c", "\u7126", "\u5df4", "\u5f13", "\u7267", "\u9697", "\u5c71",\n\n            "\u8c37", "\u8f66", "\u4faf", "\u5b93", "\u84ec", "\u5168", "\u90d7", "\u73ed", "\u4ef0", "\u79cb", "\u4ef2", "\u4f0a", "\u5bab", "\u5b81", "\u4ec7", "\u683e", "\u66b4", "\u7518", "\u94ad", "\u5389", "\u620e", "\u7956", "\u6b66", "\u7b26", "\u5218", "\u666f",\n\n            "\u8a79", "\u675f", "\u9f99", "\u53f6", "\u5e78", "\u53f8", "\u97f6", "\u90dc", "\u9ece", "\u84df", "\u6ea5", "\u5370", "\u5bbf", "\u767d", "\u6000", "\u84b2", "\u90b0", "\u4ece", "\u9102", "\u7d22", "\u54b8", "\u7c4d", "\u8d56", "\u5353", "\u853a", "\u5c60",\n\n            "\u8499", "\u6c60", "\u4e54", "\u9634", "\u90c1", "\u80e5", "\u80fd", "\u82cd", "\u53cc", "\u95fb", "\u8398", "\u515a", "\u7fdf", "\u8c2d", "\u8d21", "\u52b3", "\u9004", "\u59ec", "\u7533", "\u6276", "\u5835", "\u5189", "\u5bb0", "\u90e6", "\u96cd", "\u5374",\n\n            "\u74a9", "\u6851", "\u6842", "\u6fee", "\u725b", "\u5bff", "\u901a", "\u8fb9", "\u6248", "\u71d5", "\u5180", "\u6d66", "\u5c1a", "\u519c", "\u6e29", "\u522b", "\u5e84", "\u664f", "\u67f4", "\u77bf", "\u960e", "\u5145", "\u6155", "\u8fde", "\u8339", "\u4e60",\n\n            "\u5ba6", "\u827e", "\u9c7c", "\u5bb9", "\u5411", "\u53e4", "\u6613", "\u614e", "\u6208", "\u5ed6", "\u5ebe", "\u7ec8", "\u66a8", "\u5c45", "\u8861", "\u6b65", "\u90fd", "\u803f", "\u6ee1", "\u5f18", "\u5321", "\u56fd", "\u6587", "\u5bc7", "\u5e7f", "\u7984",\n\n            "\u9619", "\u4e1c", "\u6b27", "\u6bb3", "\u6c83", "\u5229", "\u851a", "\u8d8a", "\u5914", "\u9686", "\u5e08", "\u5de9", "\u538d", "\u8042", "\u6641", "\u52fe", "\u6556", "\u878d", "\u51b7", "\u8a3e", "\u8f9b", "\u961a", "\u90a3", "\u7b80", "\u9976", "\u7a7a",\n\n            "\u66fe", "\u6bcb", "\u6c99", "\u4e5c", "\u517b", "\u97a0", "\u987b", "\u4e30", "\u5de2", "\u5173", "\u84af", "\u76f8", "\u67e5", "\u540e", "\u8346", "\u7ea2", "\u6e38", "\u90cf", "\u7afa", "\u6743", "\u902f", "\u76d6", "\u76ca", "\u6853", "\u516c", "\u4ec9",\n\n            "\u7763", "\u5cb3", "\u5e05", "\u7f11", "\u4ea2", "\u51b5", "\u90c8", "\u6709", "\u7434", "\u5f52", "\u6d77", "\u664b", "\u695a", "\u95eb", "\u6cd5", "\u6c5d", "\u9122", "\u6d82", "\u94a6", "\u5546", "\u725f", "\u4f58", "\u4f74", "\u4f2f", "\u8d4f", "\u58a8",\n\n            "\u54c8", "\u8c2f", "\u7bc1", "\u5e74", "\u7231", "\u9633", "\u4f5f", "\u8a00", "\u798f", "\u5357", "\u706b", "\u94c1", "\u8fdf", "\u6f06", "\u5b98", "\u51bc", "\u771f", "\u5c55", "\u7e41", "\u6a80", "\u796d", "\u5bc6", "\u656c", "\u63ed", "\u821c", "\u697c",\n\n            "\u758f", "\u5192", "\u6d51", "\u631a", "\u80f6", "\u968f", "\u9ad8", "\u768b", "\u539f", "\u79cd", "\u7ec3", "\u5f25", "\u4ed3", "\u772d", "\u8e47", "\u8983", "\u963f", "\u95e8", "\u607d", "\u6765", "\u7da6", "\u53ec", "\u4eea", "\u98ce", "\u4ecb", "\u5de8",\n\n            "\u6728", "\u4eac", "\u72d0", "\u90c7", "\u864e", "\u679a", "\u6297", "\u8fbe", "\u675e", "\u82cc", "\u6298", "\u9ea6", "\u5e86", "\u8fc7", "\u7af9", "\u7aef", "\u9c9c", "\u7687", "\u4e93", "\u8001", "\u662f", "\u79d8", "\u7545", "\u909d", "\u8fd8", "\u5bbe",\n\n            "\u95fe", "\u8f9c", "\u7eb5", "\u4fb4", "\u4e07\u4fdf", "\u53f8\u9a6c", "\u4e0a\u5b98", "\u6b27\u9633", "\u590f\u4faf", "\u8bf8\u845b", "\u95fb\u4eba", "\u4e1c\u65b9", "\u8d6b\u8fde", "\u7687\u752b", "\u7f8a\u820c", "\u5c09\u8fdf", "\u516c\u7f8a", "\u6fb9\u53f0", "\u516c\u51b6", "\u5b97\u6b63",\n\n            "\u6fee\u9633", "\u6df3\u4e8e", "\u5355\u4e8e", "\u592a\u53d4", "\u7533\u5c60", "\u516c\u5b59", "\u4ef2\u5b59", "\u8f69\u8f95", "\u4ee4\u72d0", "\u949f\u79bb", "\u5b87\u6587", "\u957f\u5b59", "\u6155\u5bb9", "\u9c9c\u4e8e", "\u95fe\u4e18", "\u53f8\u5f92", "\u53f8\u7a7a", "\u5140\u5b98", "\u53f8\u5bc7",\n\n            "\u5357\u95e8", "\u547c\u5ef6", "\u5b50\u8f66", "\u989b\u5b59", "\u7aef\u6728", "\u5deb\u9a6c", "\u516c\u897f", "\u6f06\u96d5", "\u8f66\u6b63", "\u58e4\u9a77", "\u516c\u826f", "\u62d3\u8dcb", "\u5939\u8c37", "\u5bb0\u7236", "\u8c37\u6881", "\u6bb5\u5e72", "\u767e\u91cc", "\u4e1c\u90ed", "\u5fae\u751f",\n\n            "\u6881\u4e18", "\u5de6\u4e18", "\u4e1c\u95e8", "\u897f\u95e8", "\u5357\u5bab", "\u7b2c\u4e94", "\u516c\u4eea", "\u516c\u4e58", "\u592a\u53f2", "\u4ef2\u957f", "\u53d4\u5b59", "\u5c48\u7a81", "\u5c14\u6731", "\u4e1c\u4e61", "\u76f8\u91cc", "\u80e1\u6bcd", "\u53f8\u57ce", "\u5f20\u5ed6", "\u96cd\u95e8",\n\n            "\u6bcb\u4e18", "\u8d3a\u5170", "\u7da6\u6bcb", "\u5c4b\u5e90", "\u72ec\u5b64", "\u5357\u90ed", "\u5317\u5bab", "\u738b\u5b59"\n    };\n\n    //\u5973 \u540d\n    private static final String[] girl = {\n            "\u79c0", "\u5a1f", "\u82f1", "\u534e", "\u6167", "\u5de7", "\u7f8e", "\u5a1c", "\u9759", "\u6dd1", "\u60e0", "\u73e0", "\u7fe0", "\u96c5", "\u829d", "\u7389", "\u840d", "\u7ea2", "\u5a25", "\u73b2", "\u82ac", "\u82b3", "\u71d5", "\u5f69", "\u6625", "\u83ca", "\u5170", "\u51e4", "\u6d01", "\u6885", "\u7433", "\u7d20", "\u4e91", "\u83b2", "\u771f", "\u73af", "\u96ea", "\u8363", "\u7231", "\u59b9", "\u971e", "\u9999", "\u6708", "\u83ba", "\u5a9b", "\u8273", "\u745e", "\u51e1", "\u4f73",\n\n            "\u5609", "\u743c", "\u52e4", "\u73cd", "\u8d1e", "\u8389", "\u6842", "\u5a23", "\u53f6", "\u74a7", "\u7490", "\u5a05", "\u7426", "\u6676", "\u598d", "\u831c", "\u79cb", "\u73ca", "\u838e", "\u9526", "\u9edb", "\u9752", "\u5029", "\u5a77", "\u59e3", "\u5a49", "\u5a34", "\u747e", "\u9896", "\u9732", "\u7476", "\u6021", "\u5a75", "\u96c1", "\u84d3", "\u7ea8", "\u4eea", "\u8377", "\u4e39", "\u84c9", "\u7709", "\u541b", "\u7434", "\u854a", "\u8587", "\u83c1", "\u68a6", "\u5c9a", "\u82d1", "\u5a55", "\u99a8", "\u7457", "\u7430", "\u97f5", "\u878d",\n\n            "\u56ed", "\u827a", "\u548f", "\u537f", "\u806a", "\u6f9c", "\u7eaf", "\u6bd3", "\u60a6", "\u662d", "\u51b0", "\u723d", "\u742c", "\u8317", "\u7fbd", "\u5e0c", "\u5b81", "\u6b23", "\u98d8", "\u80b2", "\u6ee2", "\u99a5", "\u7b60", "\u67d4", "\u7af9", "\u972d", "\u51dd", "\u6653", "\u6b22", "\u9704", "\u67ab", "\u82b8", "\u83f2", "\u5bd2", "\u4f0a", "\u4e9a", "\u5b9c", "\u53ef", "\u59ec", "\u8212", "\u5f71", "\u8354", "\u679d", "\u601d", "\u4e3d"\n    };\n\n    //\u5973 \u540d2\n    private static final String[] girl2 = {\n            "\u5bc4\u6885", "\u4ee3\u8587", "\u5357\u9752", "\u6620\u51ac", "\u5de7\u5b89", "\u9189\u7434", "\u5e7c\u513f", "\u590f\u66fc", "\u5e7c\u5f64", "\u8bd7\u83b2", "\u9752\u4e39", "\u82e5\u5de7", "\u5c71\u8377", "\u60dc\u65cb", "\u542b\u82b9", "\u521d\u4e91", "\u7b11\u4e39", "\u542b\u84dd", "\u8bd7\u5bd2", "\u82b7\u5bb9", "\u4ea6\u65cb", "\u6000\u7389", "\u60dc\u84c9", "\u6625\u6885", "\u51b7\u5de7", "\u51cc\u9999", "\u6068\u5de7", "\u8bbf\u53cc", "\u6c9b\u9732", "\u5ff5\u4e91", "\u68a6\u84c9", "\u9189\u854a", "\u53cb\u5b89", "\u5ff5\u9732", "\u5982\u840d", "\u767d\u857e", "\u6620\u8587", "\u6625\u8377", "\u7eff\u79cb", "\u60dc\u9633", "\u5bfb\u7fe0", "\u5c14\u857e", "\u534a\u771f", "\u5bd2\u9999", "\u5bc4\u6843", "\u4e50\u83b2", "\u4e4b\u67ab", "\u6653\u7389", "\u5b9b\u5bb9", "\u60dc\u5349", "\u5143\u79cb", "\u521d\u5f64", "\u4ee5\u98ce", "\u9189\u4e91", "\u60dc\u8377", "\u6620\u857e", "\u96c5\u83e1", "\u5343\u51e1", "\u542b\u53cc", "\u4e50\u4e1d", "\u5343\u513f", "\u51dd\u6674", "\u5929\u971c", "\u8c37\u68a6", "\u4ea6\u971c", "\u8bd7\u767d", "\u95ee\u73cd", "\u6c34\u83e1", "\u9752\u6587", "\u8bed\u53cc", "\u9189\u6843", "\u8bbf\u8587", "\u79cb\u83f1", "\u534a\u65cb", "\u95ee\u9999", "\u51b7\u83e1", "\u591c\u5c9a", "\u6625\u9732", "\u66fc\u5357", "\u6653\u513f", "\u767d\u73cd", "\u5b89\u51e1", "\u7075\u83e1", "\u5b9b\u9633", "\u6db5\u84c9", "\u96e8\u5b89", "\u75f4\u79cb",\n\n            "\u96c1\u69d0", "\u5143\u8299", "\u95ee\u5f64", "\u8c37\u5c9a", "\u4ee3\u69d0", "\u8fce\u8299", "\u96c5\u4e91", "\u534a\u51e1", "\u53c8\u6587", "\u6625\u857e", "\u9752\u98ce", "\u82b7\u67cf", "\u91c7\u6d77", "\u96c1\u840d", "\u6c34\u67ab", "\u96ea\u73ca", "\u96c5\u857e", "\u5ff5\u5170", "\u4e39\u6587", "\u68a6\u5929", "\u542c\u5bb9", "\u7eee\u65cb", "\u6625\u5b89", "\u79cb\u69d0", "\u89c5\u4e1d", "\u6068\u67cf", "\u6625\u6613", "\u96ea\u9633", "\u4ee3\u9752", "\u591c\u840d", "\u5e7c\u6ce2", "\u95ee\u9633", "\u6db5\u4e1d", "\u53cb\u7b60", "\u5c14\u8377", "\u51e1\u67d4", "\u9189\u5357", "\u6d77\u6674", "\u96ea\u840d", "\u6db5\u9999", "\u5b9b\u971c", "\u75f4\u8377", "\u76fc\u7075", "\u5982\u51dd", "\u95ee\u96ea", "\u51cc\u7389", "\u6620\u9999", "\u5fc6\u8776", "\u591c\u98ce", "\u4ee3\u6885", "\u51dd\u857e", "\u8fce\u83f1", "\u96c1\u5bb9", "\u5bc4\u6d77", "\u5143\u5357", "\u66fc\u69d0", "\u590f\u6625", "\u53c8\u65cb", "\u9999\u65cb", "\u521d\u7075", "\u60dc\u5c71", "\u4ee5\u5349", "\u7d2b\u8377", "\u51dd\u8377", "\u76fc\u7b60", "\u5999\u854a", "\u6620\u5170", "\u8bbf\u67ab", "\u6613\u590f", "\u89c5\u7b60", "\u60dc\u96c1", "\u60dc\u96ea", "\u82b7\u767d", "\u8fce\u82b9", "\u4ece\u6674", "\u5929\u4ea6", "\u5de7\u5170", "\u9189\u6d77", "\u4e66\u5de7", "\u7eff\u9752", "\u6c34\u6885", "\u6c34\u4e39", "\u6068\u5170", "\u68a6\u4e1d", "\u60dc\u83f1", "\u65b0\u53cc", "\u8bbf\u70df", "\u76fc\u69d0",\n\n            "\u51b0\u67ab", "\u9752\u69d0", "\u5bfb\u82b9", "\u96c1\u854a", "\u51b7\u84dd", "\u98de\u9999", "\u51cc\u8776", "\u96c1\u51dd", "\u4e39\u6613", "\u79cb\u590f", "\u7eee\u5bd2", "\u9189\u73ca", "\u5929\u84dd", "\u5bfb\u7fe0", "\u9752\u6674", "\u4f9d\u590f", "\u4e4b\u6587", "\u50b2\u4e91", "\u96c5\u67d4", "\u9999\u513f", "\u4e39\u6674", "\u5e7c\u66fc", "\u5b9b\u9999", "\u6d77\u69d0", "\u6155\u96ea", "\u78a7\u5bb9", "\u51e1\u9633", "\u65b0\u4e4b", "\u601d\u96ea", "\u51cc\u4e4b", "\u53cb\u51dd", "\u6068\u68a6", "\u7eee\u4e39", "\u5c0f\u96ea", "\u6db5\u68a6", "\u95ee\u854a", "\u5b9b\u83f1", "\u4e4b\u66fc", "\u6c9b\u9633", "\u65b0\u4e1d", "\u601c\u6ce2", "\u591c\u82b9", "\u6613\u7b60", "\u78a7\u767d", "\u767d\u66fc", "\u5343\u4e4b", "\u4e4b\u9752", "\u51b0\u67ab", "\u5bfb\u5929", "\u4ee3\u7fe0", "\u66fc\u5929", "\u6c34\u7389", "\u5411\u7eff", "\u76fc\u7476", "\u51dd\u70df", "\u7d2b\u5f64", "\u66fc\u971c", "\u542c\u590f", "\u78a7\u67d4", "\u6000\u590f", "\u7fe0\u5170", "\u5c71\u51ac", "\u96e8\u73cd", "\u9756\u7075", "\u7fe0\u9732", "\u5c14\u857e", "\u5343\u7075", "\u7eff\u73ca", "\u601d\u5c71", "\u51dd\u9732", "\u5982\u6ce2", "\u6653\u767d", "\u68a6\u8587", "\u91c7\u4e39", "\u5b64\u66fc", "\u6155\u767d", "\u9759\u4e91", "\u6625\u5de7", "\u8bbf\u6d77", "\u95ee\u6613", "\u5b64\u5f64", "\u5c71\u82b9", "\u9759\u5bb9", "\u4f9d\u513f", "\u601d\u857e", "\u5999\u84c9", "\u5bfb\u4e39", "\u8bd7\u9633",\n\n            "\u53cb\u70df", "\u76fc\u7fe0", "\u4e4b\u8377", "\u89c5\u51e1", "\u7075\u6587", "\u6db5\u67ab", "\u5343\u513f", "\u4e39\u67cf", "\u89c5\u68a6", "\u5ff5\u6d77", "\u65b0\u7af9", "\u53c8\u51dd", "\u6000\u73ca", "\u68a6\u5de7", "\u51e1\u6d77", "\u4ece\u96ea", "\u60dc\u857e", "\u51dd\u4e4b", "\u591c\u5349", "\u7eff\u6674", "\u5b9b\u5f64", "\u5c71\u5bb9", "\u6625\u98ce", "\u6620\u9633", "\u590f\u67f3", "\u7d2b\u84dd", "\u7b11\u5f64", "\u5143\u857e", "\u7fe0\u67cf", "\u4e66\u6843", "\u9189\u70df", "\u53cb\u857e", "\u5e7c\u5349", "\u5ff5\u971c", "\u65b0\u5349", "\u60dc\u513f", "\u6068\u7389", "\u5b89\u5929", "\u6653\u5b89", "\u9752\u5170", "\u4ece\u6ce2", "\u5b64\u5bd2", "\u79cb\u6587", "\u6653\u590f", "\u5357\u8587", "\u51dd\u9752", "\u91c7\u8776", "\u4e4b\u96ea", "\u8c37\u98ce", "\u78a7\u8587", "\u4f9d\u5f64", "\u6c34\u7434", "\u4ea6\u79cb", "\u7eee\u8431", "\u98de\u68a6", "\u50b2\u73cd", "\u8bd7\u8377", "\u9756\u8299", "\u51b0\u69d0", "\u96e8\u857e", "\u5c71\u6885", "\u96ea\u7fe0", "\u5b64\u4e91", "\u51cc\u5349", "\u534a\u5de7", "\u5bd2\u98ce", "\u7b11\u67d4", "\u98de\u68a6", "\u9759\u8776", "\u7d2b\u51dd", "\u51ac\u5349", "\u7eff\u70df", "\u51dd\u5f64", "\u5143\u6613", "\u5bfb\u4ea6", "\u6068\u6674", "\u5343\u51dd", "\u89c5\u73ca", "\u66fc\u73cd", "\u6620\u67d4", "\u521d\u767d", "\u591c\u4e91", "\u6d77\u5929", "\u5de7\u6625", "\u51b7\u4ea6", "\u51b0\u7b60", "\u6db5\u5929", "\u5bd2\u7af9",\n\n            "\u4ea6\u8776", "\u4e4b\u8299", "\u4e39\u96ea", "\u9999\u67ab", "\u7d2b\u84dd", "\u5ff5\u69d0", "\u8fce\u9999", "\u6c34\u67d4", "\u5ff5\u6ce2", "\u9752\u67ab", "\u5de7\u7075", "\u5b64\u51e1", "\u7b11\u9732", "\u50b2\u84c9", "\u6620\u854a", "\u767d\u854a", "\u7075\u66fc", "\u53cb\u4e91", "\u5b64\u9999", "\u5fc6\u82b9", "\u5929\u83e1", "\u66fc\u4e1d", "\u6155\u83f1", "\u601d\u51dd", "\u7eff\u9752", "\u6653\u8377", "\u7d2b\u6613", "\u91c7\u73cd", "\u91c7\u4e1d", "\u82b7\u9999", "\u767d\u5929", "\u89c5\u5b89", "\u76fc\u6885", "\u7075\u677e", "\u51b0\u677e", "\u5357\u9732", "\u95ee\u9999", "\u78a7\u840d", "\u7d2b\u7b60", "\u5b89\u51e1", "\u53cb\u6674", "\u4ea6\u6625", "\u51cc\u8377", "\u9752\u4e4b", "\u7b11\u68a6", "\u534a\u96ea", "\u7eee\u7eff", "\u9752\u70df", "\u8fce\u73cd", "\u4e4b\u51e1", "\u6653\u8431", "\u5bd2\u6885", "\u5982\u4e91", "\u7fe0\u5357", "\u601c\u857e", "\u60dc\u971c", "\u8fce\u771f", "\u601d\u8587", "\u4e4b\u67cf", "\u51b7\u4e91", "\u6068\u82b9", "\u78a7\u767d", "\u542c\u5bd2", "\u5e7b\u5929", "\u8c37\u67d4", "\u521d\u5349", "\u6c34\u9752", "\u95ee\u854a", "\u7075\u53cc", "\u5bd2\u8431", "\u4e50\u9732", "\u82b7\u83f1", "\u53c8\u9732", "\u7075\u82b9", "\u6613\u67d4", "\u5343\u5bd2", "\u5143\u82b9", "\u5de7\u5357", "\u5bc4\u4e91", "\u5999\u6d77", "\u5411\u83f1", "\u5e7b\u971c", "\u89c5\u51dd", "\u7b11\u854a", "\u7fe0\u6ce2", "\u5ff5\u5bd2", "\u8fce\u5bd2", "\u5143\u8587",\n\n            "\u96c5\u5357", "\u6db5\u6d77", "\u51b7\u7389", "\u8c37\u84c9", "\u4ee5\u6674", "\u601c\u4e1d", "\u4ece\u4e39", "\u5982\u5de7", "\u5fc6\u98ce", "\u9189\u8776", "\u79cb\u513f", "\u4ea6\u79cb", "\u6625\u840d", "\u82b7\u7434", "\u95ee\u65cb", "\u9752\u9732", "\u50b2\u4e91", "\u5e7c\u8776", "\u6c34\u8377", "\u4e50\u84c9", "\u8bed\u73cd", "\u6068\u5b89", "\u51b7\u67d4", "\u6620\u4e4b", "\u5999\u51ac", "\u68a6\u67d4", "\u6000\u4e1d", "\u75f4\u67f3", "\u4e50\u51dd", "\u4e39\u5349", "\u521d\u6885", "\u51dd\u67f3", "\u8fce\u8377", "\u5c0f\u5f64", "\u5c14\u84c9", "\u68a6\u5c9a", "\u51ac\u4ea6", "\u98de\u4ea6", "\u96c5\u65cb", "\u4ee3\u73cd", "\u5fc6\u4ea6", "\u7fe0\u5f64", "\u5343\u6674", "\u5ff5\u854a", "\u6613\u7389", "\u6db5\u7389", "\u521d\u5f64", "\u4e4b\u67f3", "\u8c37\u66fc", "\u98de\u6843", "\u5e73\u83b2", "\u6625\u4ea6", "\u6620\u8377", "\u96c5\u7389", "\u601c\u5349", "\u6653\u8587", "\u5c14\u7b60", "\u601c\u96c1", "\u96e8\u5929", "\u4ee3\u51ac", "\u98de\u67cf", "\u5b89\u66fc", "\u5c0f\u5170", "\u8c37\u854a", "\u7d2b\u96c1", "\u767d\u7b60", "\u6155\u8431", "\u6068\u5170", "\u96ea\u767d", "\u82e5\u5357", "\u9759\u9633", "\u5357\u8431", "\u5ff5\u854a", "\u53c8\u5de7", "\u78a7\u7476", "\u6155\u5c71", "\u7eee\u857e", "\u7d2b\u590f", "\u76fc\u7b60", "\u7eee\u82b9", "\u5bc4\u4e91", "\u534a\u67d4", "\u6625\u5f64", "\u9756\u7389", "\u91c7\u5c71", "\u5bd2\u84c9", "\u89c5\u9999", "\u7b11\u67ab",\n\n            "\u5bfb\u51e1", "\u50b2\u5357", "\u76fc\u67f3", "\u51dd\u4e91", "\u521d\u6674", "\u6000\u51ac", "\u6c34\u84c9", "\u6068\u96c1", "\u5c71\u854a", "\u5c71\u4e91", "\u51b0\u6885", "\u767d\u53cc", "\u5357\u96ea", "\u4ea6\u96c1", "\u9999\u4e91", "\u5fc6\u84c9", "\u4ee3\u8431", "\u4e4b\u4ea6", "\u96e8\u8431", "\u5c0f\u4e4b", "\u601d\u51e1", "\u5411\u83f1", "\u590f\u69d0", "\u6c34\u5349", "\u5982\u7389", "\u5982\u53cc", "\u5bd2\u9752", "\u4ee3\u590f", "\u601d\u8776", "\u5143\u4e1d", "\u4f9d\u677e", "\u5b89\u73cd", "\u5357\u8377", "\u53c8\u677e", "\u5999\u96ea", "\u82e5\u9999", "\u51e1\u83b2", "\u75f4\u73cd", "\u534a\u67d4", "\u6068\u69d0", "\u5b9b\u5bd2", "\u78a7\u6843", "\u7fe0\u98ce", "\u68a6\u8776", "\u98de\u5357", "\u601c\u8587", "\u5e7b\u6885", "\u5c71\u4ea6", "\u5bfb\u73cd", "\u5929\u5357", "\u521d\u51dd", "\u5999\u5357", "\u5357\u70df", "\u96e8\u9633", "\u7eff\u70df", "\u7075\u51ac", "\u5b89\u8776", "\u9752\u4e91", "\u5411\u53cc", "\u5e7b\u4e39", "\u51e1\u96ea", "\u4ea6\u5b89", "\u534a\u96c1", "\u68a6\u857e", "\u4f9d\u6d77", "\u96ea\u5c9a", "\u6625\u6587", "\u7b11\u4e91", "\u76fc\u79cb", "\u542b\u5349", "\u53c8\u9999", "\u5343\u4e4b", "\u5fc6\u590f"\n    };\n\n    //\u7537 \u540d\n    private static final String[] boy = {\n            "\u4f1f", "\u521a", "\u52c7", "\u6bc5", "\u4fca", "\u5cf0", "\u5f3a", "\u519b", "\u5e73", "\u4fdd", "\u4e1c", "\u6587", "\u8f89", "\u529b", "\u660e", "\u6c38", "\u5065", "\u4e16", "\u5e7f", "\u5fd7", "\u4e49", "\u5174", "\u826f", "\u6d77", "\u5c71", "\u4ec1", "\u6ce2", "\u5b81", "\u8d35", "\u798f", "\u751f", "\u9f99", "\u5143", "\u5168", "\u56fd", "\u80dc", "\u5b66", "\u7965", "\u624d", "\u53d1", "\u6b66", "\u65b0", "\u5229", "\u6e05", "\u98de", "\u5f6c", "\u5bcc", "\u987a", "\u4fe1",\n\n            "\u5b50", "\u6770", "\u6d9b", "\u660c", "\u6210", "\u5eb7", "\u661f", "\u5149", "\u5929", "\u8fbe", "\u5b89", "\u5ca9", "\u4e2d", "\u8302", "\u8fdb", "\u6797", "\u6709", "\u575a", "\u548c", "\u5f6a", "\u535a", "\u8bda", "\u5148", "\u656c", "\u9707", "\u632f", "\u58ee", "\u4f1a", "\u601d", "\u7fa4", "\u8c6a", "\u5fc3", "\u90a6", "\u627f", "\u4e50", "\u7ecd", "\u529f", "\u677e", "\u5584", "\u539a", "\u5e86", "\u78ca", "\u6c11", "\u53cb", "\u88d5", "\u6cb3", "\u54f2", "\u6c5f", "\u8d85", "\u6d69", "\u4eae", "\u653f", "\u8c26", "\u4ea8", "\u5947", "\u56fa",\n\n            "\u4e4b", "\u8f6e", "\u7ff0", "\u6717", "\u4f2f", "\u5b8f", "\u8a00", "\u82e5", "\u9e23", "\u670b", "\u658c", "\u6881", "\u680b", "\u7ef4", "\u542f", "\u514b", "\u4f26", "\u7fd4", "\u65ed", "\u9e4f", "\u6cfd", "\u6668", "\u8fb0", "\u58eb", "\u4ee5", "\u5efa", "\u5bb6", "\u81f4", "\u6811", "\u708e", "\u5fb7", "\u884c", "\u65f6", "\u6cf0", "\u76db", "\u96c4", "\u741b", "\u94a7", "\u51a0", "\u7b56", "\u817e", "\u6960", "\u6995", "\u98ce", "\u822a", "\u5f18"\n    };\n\n    private static final String[] boy2 = {\n            "\u5b89\u90a6", "\u5b89\u798f", "\u5b89\u6b4c", "\u5b89\u56fd", "\u5b89\u548c", "\u5b89\u5eb7", "\u5b89\u6f9c", "\u5b89\u6c11", "\u5b89\u5b81", "\u5b89\u5e73", "\u5b89\u7136", "\u5b89\u987a", "\u853c\u6c11", "\u5b89\u5409", "\u5b89\u664f", "\u5b89\u826f", "\u5b89\u6f9c", "\u5b89\u548c", "\u5b89\u5e73", "\u5b89\u5eb7", "\u5b89\u56fd", "\u6602\u7199", "\u6602\u7136", "\u6602\u6770", "\u6602\u96c4", "\u6602\u6bc5", "\u6602\u8f69", "\u6602\u96c4", "\u5cb8\u9a70", "\u5cb8\u8c37", "\u5cb8\u9a6d", "\u6602\u96c4", "\u50b2\u9a70", "\u50b2\u9a81", "\u6fb3\u9a90", "\u6fb3\u9a8f", "\u5b89\u7fd4", "\u5b89\u664f", "\u5b89\u5b9c", "\u5b89\u6021", "\u5b89\u6613", "\u5b89\u5fd7", "\u6602\u7136", "\u6602\u96c4", "\u5bbe\u767d", "\u5bbe\u9e3f", "\u5bbe\u5b9e", "\u5f6c\u5f6c", "\u5f6c\u70b3", "\u5f6c\u90c1", "\u658c\u658c", "\u658c\u851a", "\u6ee8\u6d77", "\u6ce2\u5149", "\u6ce2\u9e3f", "\u6ce2\u5cfb", "\u6ce2\u6d9b", "\u535a\u701a", "\u535a\u8d85", "\u535a\u8fbe", "\u535a\u539a", "\u535a\u7b80", "\u535a\u660e", "\u535a\u5bb9", "\u535a\u8d61", "\u535a\u6d89", "\u535a\u5b9e", "\u535a\u6d9b", "\u79c9\u6797", "\u79c9\u8605", "\u79c9\u8343", "\u79c9\u7ef6", "\u79c9\u4e1c", "\u79c9\u4e2d", "\u79c9\u5764", "\u79c9\u8861", "\u79c9\u4e49", "\u79c9\u6cbb", "\u79c9\u6069", "\u79c9\u653f", "\u79c9\u94ba", "\u535a\u8d85", "\u535a\u660e", "\u535a\u5bb9", "\u535a\u96c5", "\u535a\u5ef6", "\u535a\u519b",\n\n            "\u535a\u4e59", "\u535a\u5e73", "\u535a\u5b9c", "\u535a\u52c9", "\u535a\u88d5", "\u535a\u8dc3", "\u535a\u8018", "\u4fdd\u534e", "\u4fdd\u6c11", "\u4fdd\u66a8", "\u4fdd\u9e3f", "\u4fdd\u5b81", "\u4fdd\u5e73", "\u5f3c\u70c1", "\u5f3c\u5b9e", "\u5f3c\u70e8", "\u5f3c\u5112", "\u70b3\u65fa", "\u70b3\u6f6e", "\u70b3\u73ae", "\u5e2e\u78ca", "\u5e2e\u948a", "\u672c\u7136", "\u672c\u85e4", "\u5f6c\u5f6c", "\u67cf\u6717", "\u67cf\u8c37", "\u67cf\u83a8", "\u6822\u6bc5", "\u535a\u6587", "\u535a\u5b66", "\u535a\u96c5", "\u535a\u5ef6", "\u535a\u827a", "\u535a\u6613", "\u535a\u88d5", "\u535a\u8fdc", "\u624d\u6377", "\u624d\u826f", "\u624d\u827a", "\u624d\u82f1", "\u624d\u54f2", "\u624d\u4fca", "\u6210\u548c", "\u6210\u5f18", "\u6210\u5316", "\u6210\u6d4e", "\u6210\u793c", "\u6210\u9f99", "\u6210\u4ec1", "\u6210\u53cc", "\u6210\u5929", "\u6210\u4e1a", "\u6210\u76ca", "\u6210\u836b", "\u6210\u5468", "\u627f\u5b89", "\u627f\u5f3c", "\u627f\u5fb7", "\u627f\u6069", "\u627f\u798f", "\u627f\u57fa", "\u627f\u6559", "\u627f\u5e73", "\u627f\u55e3", "\u627f\u5929", "\u627f\u671b", "\u627f\u5ba3", "\u627f\u989c", "\u627f\u4e1a", "\u627f\u60a6", "\u627f\u5141", "\u627f\u8fd0", "\u627f\u8f7d", "\u627f\u6cfd", "\u627f\u5fd7", "\u5fb7\u672c", "\u5fb7\u6d77", "\u5fb7\u539a", "\u5fb7\u534e", "\u5fb7\u8f89", "\u5fb7\u60e0", "\u5fb7\u5bb9", "\u5fb7\u6da6", "\u5fb7\u5bff", "\u5fb7\u6c34", "\u5fb7\u99a8", "\u5fb7\u66dc",\n\n            "\u5fb7\u4e1a", "\u5fb7\u4e49", "\u5fb7\u5eb8", "\u5fb7\u4f51", "\u5fb7\u5b87", "\u5fb7\u5143", "\u5fb7\u8fd0", "\u5fb7\u6cfd", "\u5fb7\u660e", "\u98de\u6602", "\u98de\u767d", "\u98de\u98d9", "\u98de\u63a3", "\u98de\u5c18", "\u98de\u6c89", "\u98de\u9a70", "\u98de\u5149", "\u98de\u7ff0", "\u98de\u822a", "\u98de\u7fee", "\u98de\u9e3f", "\u98de\u864e", "\u98de\u6377", "\u98de\u9f99", "\u98de\u9e3e", "\u98de\u9e23", "\u98de\u9e4f", "\u98de\u626c", "\u98de\u6587", "\u98de\u7fd4", "\u98de\u661f", "\u98de\u7ffc", "\u98de\u82f1", "\u98de\u5b87", "\u98de\u7fbd", "\u98de\u96e8", "\u98de\u8bed", "\u98de\u8dc3", "\u98de\u7ae0", "\u98de\u821f", "\u98ce\u534e", "\u4e30\u8302", "\u4e30\u7fbd", "\u521a\u8c6a", "\u521a\u6d01", "\u521a\u6377", "\u521a\u6bc5", "\u9ad8\u6602", "\u9ad8\u5c91", "\u9ad8\u7545", "\u9ad8\u8d85", "\u9ad8\u9a70", "\u9ad8\u8fbe", "\u9ad8\u6fb9", "\u9ad8\u98de", "\u9ad8\u82ac", "\u9ad8\u5cef", "\u9ad8\u6b4c", "\u9ad8\u683c", "\u9ad8\u5bd2", "\u9ad8\u7ff0", "\u9ad8\u6770", "\u9ad8\u6d01", "\u9ad8\u5cfb", "\u9ad8\u6717", "\u9ad8\u4e3d", "\u9ad8\u9088", "\u9ad8\u65fb", "\u9ad8\u660e", "\u9ad8\u723d", "\u9ad8\u5174", "\u9ad8\u8f69", "\u9ad8\u96c5", "\u9ad8\u626c", "\u9ad8\u9633", "\u9ad8\u4e49", "\u9ad8\u8c0a", "\u9ad8\u9038", "\u9ad8\u61ff", "\u9ad8\u539f", "\u9ad8\u8fdc", "\u9ad8\u97f5", "\u9ad8\u5353", "\u5149\u8d6b", "\u5149\u534e", "\u5149\u8f89", "\u5149\u6d4e", "\u5149\u9701",\n\n            "\u5149\u4eae", "\u5149\u4e34", "\u5149\u660e", "\u5149\u542f", "\u5149\u7199", "\u5149\u8000", "\u5149\u8a89", "\u5149\u8fdc", "\u56fd\u5b89", "\u56fd\u5174", "\u56fd\u6e90", "\u51a0\u5b87", "\u51a0\u7389", "\u6657\u6631", "\u6657\u65e5", "\u6db5\u7545", "\u6db5\u6da4", "\u6db5\u4eae", "\u6db5\u5fcd", "\u6db5\u5bb9", "\u6db5\u6da6", "\u6db5\u6db5", "\u6db5\u7166", "\u6db5\u84c4", "\u6db5\u884d", "\u6db5\u610f", "\u6db5\u6620", "\u6db5\u80b2", "\u7ff0\u91c7", "\u7ff0\u6c60", "\u7ff0\u98de", "\u7ff0\u6d77", "\u7ff0\u7fee", "\u7ff0\u6797", "\u7ff0\u58a8", "\u7ff0\u5b66", "\u7ff0\u97f3", "\u701a\u73a5", "\u7ff0\u85fb", "\u701a\u6d77", "\u701a\u6f20", "\u660a\u82cd", "\u660a\u660a", "\u660a\u7a7a", "\u660a\u4e7e", "\u660a\u7a79", "\u660a\u7136", "\u660a\u7136", "\u660a\u5929", "\u660a\u7131", "\u660a\u82f1", "\u6d69\u6ce2", "\u6d69\u535a", "\u6d69\u521d", "\u6d69\u5927", "\u6d69\u5b95", "\u6d69\u8361", "\u6d69\u6b4c", "\u6d69\u5e7f", "\u6d69\u6d86", "\u6d69\u701a", "\u6d69\u6d69", "\u6d69\u6168", "\u6d69\u65f7", "\u6d69\u9614", "\u6d69\u6f2b", "\u6d69\u6dfc", "\u6d69\u6e3a", "\u6d69\u9088", "\u6d69\u6c14", "\u6d69\u7136", "\u6d69\u7a70", "\u6d69\u58e4", "\u6d69\u601d", "\u6d69\u8a00", "\u7693\u8f69", "\u548c\u853c", "\u548c\u5b89", "\u548c\u74a7", "\u548c\u6636", "\u548c\u7545", "\u548c\u98ce", "\u548c\u6b4c", "\u548c\u5149", "\u548c\u5e73", "\u548c\u6d3d", "\u548c\u60ec", "\u548c\u987a",\n\n            "\u548c\u7855", "\u548c\u9882", "\u548c\u6cf0", "\u548c\u608c", "\u548c\u901a", "\u548c\u540c", "\u548c\u7166", "\u548c\u96c5", "\u548c\u5b9c", "\u548c\u6021", "\u548c\u7389", "\u548c\u88d5", "\u548c\u8c6b", "\u548c\u60a6", "\u548c\u97f5", "\u548c\u6cfd", "\u548c\u6b63", "\u548c\u5fd7", "\u9e64\u8f69", "\u5f18\u535a", "\u5f18\u5927", "\u5f18\u65b9", "\u5f18\u5149", "\u5f18\u548c", "\u5f18\u539a", "\u5f18\u5316", "\u5f18\u6d4e", "\u5f18\u9614", "\u5f18\u4eae", "\u5f18\u91cf", "\u5f18\u6df1", "\u5f18\u76db", "\u5f18\u56fe", "\u5f18\u4f1f", "\u5f18\u6587", "\u5f18\u65b0", "\u5f18\u96c5", "\u5f18\u626c", "\u5f18\u4e1a", "\u5f18\u4e49", "\u5f18\u76ca", "\u5f18\u6bc5", "\u5f18\u61ff", "\u5f18\u81f4", "\u5f18\u58ee", "\u5b8f\u4f2f", "\u5b8f\u535a", "\u5b8f\u624d", "\u5b8f\u7545", "\u5b8f\u8fbe", "\u5b8f\u5927", "\u5b8f\u653e", "\u5b8f\u5bcc", "\u5b8f\u5cfb", "\u5b8f\u6d5a", "\u5b8f\u607a", "\u5b8f\u65f7", "\u5b8f\u9614", "\u5b8f\u6717", "\u5b8f\u8302", "\u5b8f\u9088", "\u5b8f\u5112", "\u5b8f\u6df1", "\u5b8f\u80dc", "\u5b8f\u76db", "\u5b8f\u723d", "\u5b8f\u7855", "\u5b8f\u4f1f", "\u5b8f\u626c", "\u5b8f\u4e49", "\u5b8f\u9038", "\u5b8f\u6bc5", "\u5b8f\u8fdc", "\u5b8f\u58ee", "\u9e3f\u5b9d", "\u9e3f\u6ce2", "\u9e3f\u535a", "\u9e3f\u624d", "\u9e3f\u5f69", "\u9e3f\u7545", "\u9e3f\u7574", "\u9e3f\u8fbe", "\u9e3f\u5fb7", "\u9e3f\u98de", "\u9e3f\u98ce", "\u9e3f\u798f", "\u9e3f\u5149", "\u9e3f\u6656",\n\n            "\u9e3f\u6717", "\u9e3f\u6587", "\u9e3f\u7199", "\u9e3f\u7fb2", "\u9e3f\u79a7", "\u9e3f\u4fe1", "\u9e3f\u8f69", "\u9e3f\u714a", "\u9e3f\u714a", "\u9e3f\u96ea", "\u9e3f\u7fbd", "\u9e3f\u8fdc", "\u9e3f\u4e91", "\u9e3f\u8fd0", "\u9e3f\u54f2", "\u9e3f\u796f", "\u9e3f\u632f", "\u9e3f\u5fd7", "\u9e3f\u5353", "\u534e\u5965", "\u534e\u91c7", "\u534e\u5f69", "\u534e\u707f", "\u534e\u85cf", "\u534e\u6c60", "\u534e\u7ff0", "\u534e\u7693", "\u534e\u6656", "\u534e\u8f89", "\u534e\u8302", "\u534e\u7f8e", "\u534e\u6e05", "\u534e\u8363", "\u534e\u5bb9", "\u5609\u8d50", "\u5609\u5fb7", "\u5609\u798f", "\u5609\u826f", "\u5609\u8302", "\u5609\u6728", "\u5609\u6155", "\u5609\u7eb3", "\u5609\u5e74", "\u5609\u5e73", "\u5609\u5e86", "\u5609\u8363", "\u5609\u5bb9", "\u5609\u745e", "\u5609\u80dc", "\u5609\u77f3", "\u5609\u5b9e", "\u5609\u6811", "\u5609\u6f8d", "\u5609\u7199", "\u5609\u79a7", "\u5609\u7965", "\u5609\u6b46", "\u5609\u8bb8", "\u5609\u52cb", "\u5609\u8a00", "\u5609\u8c0a", "\u5609\u61ff", "\u5609\u9896", "\u5609\u4f51", "\u5609\u7389", "\u5609\u8a89", "\u5609\u60a6", "\u5609\u8fd0", "\u5609\u6cfd", "\u5609\u73cd", "\u5609\u796f", "\u5609\u5fd7", "\u5609\u81f4", "\u575a\u767d", "\u575a\u58c1", "\u575a\u79c9", "\u575a\u6210", "\u575a\u8bda", "\u5efa\u5b89", "\u5efa\u767d", "\u5efa\u67cf", "\u5efa\u672c", "\u5efa\u5f3c", "\u5efa\u5fb7", "\u5efa\u534e", "\u5efa\u660e", "\u5efa\u8317", "\u5efa\u6728",\n\n            "\u5efa\u6811", "\u5efa\u540c", "\u5efa\u4fee", "\u5efa\u4e1a", "\u5efa\u4e49", "\u5efa\u5143", "\u5efa\u7ae0", "\u5efa\u4e2d", "\u5065\u67cf", "\u91d1\u946b", "\u9526\u7a0b", "\u747e\u745c", "\u664b\u9e4f", "\u7ecf\u8d4b", "\u7ecf\u4e98", "\u7ecf\u56fd", "\u7ecf\u7565", "\u7ecf\u7eb6", "\u7ecf\u7eac", "\u7ecf\u6b66", "\u7ecf\u4e1a", "\u7ecf\u4e49", "\u7ecf\u827a", "\u666f\u6f84", "\u666f\u798f", "\u666f\u7115", "\u666f\u8f89", "\u666f\u8f89", "\u666f\u9f99", "\u666f\u660e", "\u666f\u5c71", "\u666f\u80dc", "\u666f\u94c4", "\u666f\u5929", "\u666f\u540c", "\u666f\u66dc", "\u9756\u742a", "\u541b\u660a", "\u541b\u6d69", "\u4fca\u827e", "\u4fca\u62d4", "\u4fca\u5f3c", "\u4fca\u624d", "\u4fca\u6750", "\u4fca\u9a70", "\u4fca\u695a", "\u4fca\u8fbe", "\u4fca\u5fb7", "\u4fca\u53d1", "\u4fca\u98ce", "\u4fca\u8c6a", "\u4fca\u5065", "\u4fca\u6770", "\u4fca\u6377", "\u4fca\u90ce", "\u4fca\u529b", "\u4fca\u826f", "\u4fca\u8fc8", "\u4fca\u8302", "\u4fca\u7f8e", "\u4fca\u6c11", "\u4fca\u540d", "\u4fca\u660e", "\u4fca\u6960", "\u4fca\u80fd", "\u4fca\u4eba", "\u4fca\u723d", "\u4fca\u609f", "\u4fca\u6664", "\u4fca\u4fa0", "\u4fca\u8d24", "\u4fca\u96c4", "\u4fca\u96c5", "\u4fca\u5f66", "\u4fca\u9038", "\u4fca\u82f1", "\u4fca\u53cb", "\u4fca\u8bed", "\u4fca\u8a89", "\u4fca\u8fdc", "\u4fca\u54f2", "\u4fca\u5586", "\u4fca\u667a", "\u5cfb\u7199", "\u5b63\u840c", "\u5b63\u540c", "\u5f00\u7545", "\u5f00\u8bda",\n\n            "\u5f00\u5b87", "\u5f00\u6d4e", "\u5f00\u9701", "\u5f00\u6717", "\u51ef\u5b89", "\u51ef\u5531", "\u51ef\u5b9a", "\u51ef\u98ce", "\u51ef\u590d", "\u51ef\u6b4c", "\u51ef\u6377", "\u51ef\u51ef", "\u51ef\u5eb7", "\u51ef\u4e50", "\u51ef\u65cb", "\u51ef\u6cfd", "\u607a\u6b4c", "\u607a\u4e50", "\u5eb7\u5b89", "\u5eb7\u4f2f", "\u5eb7\u6210", "\u5eb7\u5fb7", "\u5eb7\u590d", "\u5eb7\u5065", "\u5eb7\u4e50", "\u5eb7\u5b81", "\u5eb7\u5e73", "\u5eb7\u80dc", "\u5eb7\u76db", "\u5eb7\u65f6", "\u5eb7\u9002", "\u5eb7\u987a", "\u5eb7\u6cf0", "\u5eb7\u88d5", "\u4e50\u5b89", "\u4e50\u90a6", "\u4e50\u6210", "\u4e50\u6c60", "\u4e50\u548c", "\u4e50\u5bb6", "\u4e50\u5eb7", "\u4e50\u4eba", "\u4e50\u5bb9", "\u4e50\u5c71", "\u4e50\u751f", "\u4e50\u5723", "\u4e50\u6c34", "\u4e50\u5929", "\u4e50\u7ae5", "\u4e50\u8d24", "\u4e50\u5fc3", "\u4e50\u6b23", "\u4e50\u9038", "\u4e50\u610f", "\u4e50\u97f3", "\u4e50\u548f", "\u4e50\u6e38", "\u4e50\u8bed", "\u4e50\u60a6", "\u4e50\u6e5b", "\u4e50\u7ae0", "\u4e50\u6b63", "\u4e50\u5fd7", "\u9ece\u6615", "\u9ece\u660e", "\u529b\u592b", "\u529b\u5f3a", "\u529b\u52e4", "\u529b\u884c", "\u529b\u5b66", "\u529b\u8a00", "\u7acb\u8bda", "\u7acb\u679c", "\u7acb\u4eba", "\u7acb\u8f89", "\u7acb\u8f69", "\u7acb\u7fa4", "\u826f\u5965", "\u826f\u5f3c", "\u826f\u624d", "\u826f\u6750", "\u826f\u7b56", "\u826f\u7574", "\u826f\u5de5", "\u826f\u7ff0", "\u826f\u5409", "\u826f\u9aa5", "\u826f\u4fca",\n\n            "\u826f\u9a8f", "\u826f\u670b", "\u826f\u5e73", "\u826f\u54f2", "\u7406\u7fa4", "\u7406\u5168", "\u8302\u624d", "\u8302\u6750", "\u8302\u5fb7", "\u8302\u5178", "\u8302\u5b9e", "\u8302\u5b66", "\u8302\u52cb", "\u8302\u5f66", "\u654f\u535a", "\u654f\u624d", "\u654f\u8fbe", "\u654f\u53e1", "\u654f\u5b66", "\u654f\u667a", "\u660e\u8bda", "\u660e\u8fbe", "\u660e\u5fb7", "\u660e\u8f89", "\u660e\u6770", "\u660e\u4fca", "\u660e\u6717", "\u660e\u4eae", "\u660e\u65ed", "\u660e\u7166", "\u660e\u8f69", "\u660e\u8fdc", "\u660e\u54f2", "\u660e\u5586", "\u660e\u77e5", "\u660e\u5fd7", "\u660e\u667a", "\u660e\u73e0", "\u670b\u5174", "\u670b\u4e49", "\u5f6d\u52c3", "\u5f6d\u8584", "\u5f6d\u5f6d", "\u5f6d\u9b44", "\u5f6d\u8d8a", "\u5f6d\u6cfd", "\u5f6d\u7956", "\u9e4f\u7a0b", "\u9e4f\u6c60", "\u9e4f\u98de", "\u9e4f\u8d4b", "\u9e4f\u6d77", "\u9e4f\u9cb8", "\u9e4f\u4e3e", "\u9e4f\u9e4d", "\u9e4f\u9cb2", "\u9e4f\u6d9b", "\u9e4f\u5929", "\u9e4f\u7ffc", "\u9e4f\u4e91", "\u9e4f\u8fd0", "\u6fee\u5b58", "\u6ea5\u5fc3", "\u749e\u7389", "\u749e\u745c", "\u6d66\u548c", "\u6d66\u6cfd", "\u5947\u7565", "\u5947\u8fc8", "\u5947\u80dc", "\u5947\u6c34", "\u5947\u601d", "\u5947\u9083", "\u5947\u4f1f", "\u5947\u73ae", "\u5947\u6587", "\u5947\u5e0c", "\u5947\u9038", "\u5947\u6b63", "\u5947\u5fd7", "\u5947\u81f4", "\u797a\u798f", "\u797a\u7136", "\u797a\u7965", "\u797a\u745e", "\u742a\u777f", "\u5e86\u751f", "\u8363\u8f69",\n\n            "\u9510\u8fbe", "\u9510\u950b", "\u9510\u7ff0", "\u9510\u8fdb", "\u9510\u7cbe", "\u9510\u7acb", "\u9510\u5229", "\u9510\u601d", "\u9510\u9038", "\u9510\u610f", "\u9510\u85fb", "\u9510\u6cfd", "\u9510\u9635", "\u9510\u5fd7", "\u9510\u667a", "\u777f\u535a", "\u777f\u624d", "\u777f\u8bda", "\u777f\u6148", "\u777f\u806a", "\u777f\u8fbe", "\u777f\u5fb7", "\u777f\u8303", "\u777f\u5e7f", "\u777f\u597d", "\u777f\u660e", "\u777f\u8bc6", "\u777f\u601d", "\u7ecd\u8f89", "\u7ecd\u94a7", "\u7ecd\u797a", "\u7ecd\u5143", "\u5347\u8363", "\u5723\u6770", "\u665f\u777f", "\u601d\u806a", "\u601d\u6dfc", "\u601d\u6e90", "\u601d\u8fdc", "\u601d\u535a", "\u65af\u5e74", "\u65af\u4f2f", "\u6cf0\u521d", "\u6cf0\u548c", "\u6cf0\u6cb3", "\u6cf0\u9e3f", "\u6cf0\u534e", "\u6cf0\u5b81", "\u6cf0\u5e73", "\u6cf0\u6e05", "\u6cf0\u7136", "\u5929\u6750", "\u5929\u6210", "\u5929\u8d4b", "\u5929\u5e72", "\u5929\u7f61", "\u5929\u5de5", "\u5929\u7ff0", "\u5929\u548c", "\u5929\u534e", "\u5929\u9a84", "\u5929\u7a7a", "\u5929\u7984", "\u5929\u8def", "\u5929\u745e", "\u5929\u777f", "\u5929\u9038", "\u5929\u4f51", "\u5929\u5b87", "\u5929\u5143", "\u5929\u97f5", "\u5929\u6cfd", "\u5929\u7eb5", "\u540c\u65b9", "\u540c\u752b", "\u540c\u5149", "\u540c\u548c", "\u540c\u5316", "\u540c\u6d4e", "\u5dcd\u6602", "\u5dcd\u7136", "\u5dcd\u5955", "\u4f1f\u535a", "\u4f1f\u6bc5", "\u4f1f\u624d", "\u4f1f\u8bda", "\u4f1f\u8302", "\u4f1f\u61cb",\n\n            "\u4f1f\u797a", "\u4f1f\u5f66", "\u4f1f\u6654", "\u4f1f\u6cfd", "\u4f1f\u5146", "\u4f1f\u5fd7", "\u6e29\u7eb6", "\u6e29\u8302", "\u6e29\u4e66", "\u6e29\u97e6", "\u6e29\u6587", "\u6e29\u745c", "\u6587\u67cf", "\u6587\u660c", "\u6587\u6210", "\u6587\u5fb7", "\u6587\u680b", "\u6587\u8d4b", "\u6587\u5149", "\u6587\u7ff0", "\u6587\u8679", "\u6587\u534e", "\u6587\u5eb7", "\u6587\u4e50", "\u6587\u6797", "\u6587\u654f", "\u6587\u745e", "\u6587\u5c71", "\u6587\u77f3", "\u6587\u661f", "\u6587\u8f69", "\u6587\u5ba3", "\u6587\u5f66", "\u6587\u66dc", "\u6587\u8000", "\u6587\u658c", "\u6587\u5f6c", "\u6587\u6ee8", "\u5411\u6668", "\u5411\u7b1b", "\u5411\u6587", "\u5411\u660e", "\u5411\u8363", "\u5411\u9633", "\u7fd4\u5b87", "\u7fd4\u98de", "\u9879\u79b9", "\u9879\u660e", "\u6653\u535a", "\u5fc3\u6c34", "\u5fc3\u601d", "\u5fc3\u8fdc", "\u6b23\u5fb7", "\u6b23\u5609", "\u6b23\u53ef", "\u6b23\u7136", "\u6b23\u8363", "\u6b23\u6021", "\u6b23\u603f", "\u6b23\u60a6", "\u65b0\u7ff0", "\u65b0\u9701", "\u65b0\u89c9", "\u65b0\u7acb", "\u65b0\u8363", "\u65b0\u77e5", "\u4fe1\u9e3f", "\u4fe1\u539a", "\u4fe1\u9e25", "\u4fe1\u7136", "\u4fe1\u745e", "\u5174\u5b89", "\u5174\u90a6", "\u5174\u660c", "\u5174\u671d", "\u5174\u5fb7", "\u5174\u53d1", "\u5174\u56fd", "\u5174\u6000", "\u5174\u5e73", "\u5174\u5e86", "\u5174\u751f", "\u5174\u601d", "\u5174\u817e", "\u5174\u65fa", "\u5174\u4e3a", "\u5174\u6587", "\u5174\u8d24",\n\n            "\u5174\u4fee", "\u5174\u5b66", "\u5174\u8a00", "\u5174\u4e1a", "\u5174\u8fd0", "\u661f\u6ce2", "\u661f\u8fb0", "\u661f\u9a70", "\u661f\u5149", "\u661f\u6d77", "\u661f\u6c49", "\u661f\u6cb3", "\u661f\u534e", "\u661f\u6656", "\u661f\u706b", "\u661f\u5251", "\u661f\u6d25", "\u661f\u9611", "\u661f\u7eac", "\u661f\u6587", "\u661f\u5b87", "\u661f\u96e8", "\u661f\u6e0a", "\u661f\u6d32", "\u4fee\u8bda", "\u4fee\u5fb7", "\u4fee\u6770", "\u4fee\u6d01", "\u4fee\u8c28", "\u4fee\u7b60", "\u4fee\u660e", "\u4fee\u80fd", "\u4fee\u5e73", "\u4fee\u9f50", "\u4fee\u7136", "\u4fee\u4e3a", "\u4fee\u4f1f", "\u4fee\u6587", "\u4fee\u96c5", "\u4fee\u6c38", "\u4fee\u8fdc", "\u4fee\u771f", "\u4fee\u7af9", "\u4fee\u8d24", "\u65ed\u5c27", "\u70ab\u660e", "\u5b66\u535a", "\u5b66\u6d77", "\u5b66\u6797", "\u5b66\u6c11", "\u5b66\u540d", "\u5b66\u6587", "\u5b66\u4e49", "\u5b66\u771f", "\u96ea\u677e", "\u96ea\u5cf0", "\u96ea\u98ce", "\u96c5\u6636", "\u96c5\u7545", "\u96c5\u8fbe", "\u96c5\u60e0", "\u96c5\u5065", "\u96c5\u73fa", "\u96c5\u9038", "\u96c5\u61ff", "\u96c5\u5fd7", "\u708e\u5f6c", "\u9633\u98d9", "\u9633\u98c7", "\u9633\u51b0", "\u9633\u6ce2", "\u9633\u4f2f", "\u9633\u6210", "\u9633\u5fb7", "\u9633\u534e", "\u9633\u6656", "\u9633\u8f89", "\u9633\u5609", "\u9633\u5e73", "\u9633\u79cb", "\u9633\u8363", "\u9633\u8212", "\u9633\u6714", "\u9633\u6587", "\u9633\u66e6", "\u9633\u590f", "\u9633\u65ed", "\u9633\u7166",\n\n            "\u9633\u708e", "\u9633\u7131", "\u9633\u66dc", "\u9633\u7fbd", "\u9633\u4e91", "\u9633\u6cfd", "\u9633\u5dde", "\u70e8\u8d6b", "\u70e8\u534e", "\u70e8\u78ca", "\u70e8\u9716", "\u70e8\u7136", "\u70e8\u70c1", "\u70e8\u4f1f", "\u70e8\u70e8", "\u70e8\u71a0", "\u70e8\u715c", "\u6bc5\u7136", "\u9038\u4ed9", "\u9038\u660e", "\u9038\u6625", "\u5b9c\u6625", "\u5b9c\u6c11", "\u5b9c\u5e74", "\u5b9c\u7136", "\u5b9c\u4eba", "\u5b9c\u4fee", "\u610f\u8fdc", "\u610f\u8574", "\u610f\u81f4", "\u610f\u667a", "\u71a0\u5f64", "\u61ff\u8f69", "\u82f1\u98d9", "\u82f1\u535a", "\u82f1\u624d", "\u82f1\u8fbe", "\u82f1\u53d1", "\u82f1\u8303", "\u82f1\u5149", "\u82f1\u8c6a", "\u82f1\u534e", "\u82f1\u6770", "\u82f1\u6717", "\u82f1\u9510", "\u82f1\u777f", "\u82f1\u53e1", "\u82f1\u97f6", "\u82f1\u536b", "\u82f1\u6b66", "\u82f1\u609f", "\u82f1\u52cb", "\u82f1\u5f66", "\u82f1\u8000", "\u82f1\u5955", "\u82f1\u9038", "\u82f1\u6bc5", "\u82f1\u54f2", "\u82f1\u5586", "\u82f1\u5353", "\u82f1\u8d44", "\u82f1\u7eb5", "\u6c38\u6021", "\u6c38\u6625", "\u6c38\u5b89", "\u6c38\u660c", "\u6c38\u957f", "\u6c38\u4e30", "\u6c38\u798f", "\u6c38\u5609", "\u6c38\u5eb7", "\u6c38\u5e74", "\u6c38\u5b81", "\u6c38\u5bff", "\u6c38\u601d", "\u6c38\u671b", "\u6c38\u65b0", "\u6c38\u8a00", "\u6c38\u9038", "\u6c38\u5143", "\u6c38\u8d1e", "\u548f\u5fb7", "\u548f\u6b4c", "\u548f\u601d", "\u548f\u5fd7", "\u52c7\u7537", "\u52c7\u519b", "\u52c7\u6377",\n\n            "\u52c7\u9510", "\u52c7\u6bc5", "\u5b87\u8fbe", "\u5b87\u822a", "\u5b87\u5bf0", "\u5b87\u6587", "\u5b87\u836b", "\u96e8\u4f2f", "\u96e8\u534e", "\u96e8\u77f3", "\u96e8\u4fe1", "\u96e8\u661f", "\u96e8\u6cfd", "\u7389\u5bb8", "\u7389\u6210", "\u7389\u9f99", "\u7389\u6cc9", "\u7389\u5c71", "\u7389\u77f3", "\u7389\u4e66", "\u7389\u6811", "\u7389\u5802", "\u7389\u8f69", "\u7389\u5b87", "\u7389\u97f5", "\u7389\u6cfd", "\u715c\u797a", "\u5143\u767d", "\u5143\u5fb7", "\u5143\u5316", "\u5143\u57fa", "\u5143\u5609", "\u5143\u7532", "\u5143\u9a79", "\u5143\u51ef", "\u5143\u607a", "\u5143\u9b41", "\u5143\u826f", "\u5143\u4eae", "\u5143\u9f99", "\u5143\u660e", "\u5143\u9752", "\u5143\u601d", "\u5143\u7eac", "\u5143\u6b66", "\u5143\u52cb", "\u5143\u6b63", "\u5143\u5fe0", "\u5143\u6d32", "\u8fdc\u822a", "\u82d1\u535a", "\u82d1\u6770", "\u8d8a\u5f6c", "\u8574\u6db5", "\u8574\u548c", "\u8574\u85c9", "\u5c55\u9e4f", "\u54f2\u701a", "\u54f2\u8302", "\u54f2\u5723", "\u54f2\u5f66", "\u632f\u6d77", "\u632f\u56fd", "\u6b63\u8bda", "\u6b63\u521d", "\u6b63\u5fb7", "\u6b63\u6d69", "\u6b63\u8c6a", "\u6b63\u5e73", "\u6b63\u5947", "\u6b63\u9752", "\u6b63\u537f", "\u6b63\u6587", "\u6b63\u7965", "\u6b63\u4fe1", "\u6b63\u96c5", "\u6b63\u9633", "\u6b63\u4e1a", "\u6b63\u8c0a", "\u6b63\u771f", "\u6b63\u5fd7", "\u5fd7\u8bda", "\u5fd7\u65b0", "\u5fd7\u52c7", "\u5fd7\u660e", "\u5fd7\u56fd", "\u5fd7\u5f3a", "\u5fd7\u5c1a",\n\n            "\u5fd7\u4e13", "\u5fd7\u6587", "\u5fd7\u884c", "\u5fd7\u5b66", "\u5fd7\u4e1a", "\u5fd7\u4e49", "\u5fd7\u7528", "\u5fd7\u6cfd", "\u81f4\u8fdc", "\u667a\u660e", "\u667a\u946b", "\u667a\u52c7", "\u667a\u654f", "\u667a\u5fd7", "\u667a\u6e0a", "\u5b50\u5b89", "\u5b50\u664b", "\u5b50\u6c11", "\u5b50\u660e", "\u5b50\u9ed8", "\u5b50\u58a8", "\u5b50\u5e73", "\u5b50\u742a", "\u5b50\u77f3", "\u5b50\u5b9e", "\u5b50\u771f", "\u5b50\u6fef", "\u5b50\u6602", "\u5b50\u8f69", "\u5b50\u745c", "\u81ea\u660e", "\u81ea\u5f3a", "\u4f5c\u4eba", "\u81ea\u6021", "\u81ea\u73cd", "\u66fe\u742a", "\u6cfd\u5b87", "\u6cfd\u8bed"\n    };\n    //\u7701\u5e02\u5730\u5740\n    private static final String[] road = {\n            "\u5e7f\u4e1c\u7701\u5e7f\u5dde\u5e02", "\u5e7f\u4e1c\u7701\u6df1\u5733\u5e02", "\u5e7f\u4e1c\u7701\u6c55\u5934\u5e02", "\u5e7f\u4e1c\u7701\u6e5b\u6c5f\u5e02", "\u5e7f\u4e1c\u7701\u97f6\u5173\u5e02", "\u5e7f\u4e1c\u7701\u73e0\u6d77\u5e02", "\u5e7f\u4e1c\u7701\u4f5b\u5c71\u5e02", "\u5e7f\u4e1c\u7701\u6c5f\u95e8\u5e02", "\u5e7f\u4e1c\u7701\u8302\u540d\u5e02", "\u5e7f\u4e1c\u7701\u8087\u5e86\u5e02", "\u5e7f\u4e1c\u7701\u60e0\u5dde\u5e02", "\u5e7f\u4e1c\u7701\u6885\u5dde\u5e02", "\u5e7f\u4e1c\u7701\u9633\u6c5f\u5e02", "\u5e7f\u4e1c\u7701\u4e1c\u839e\u5e02", "\u5e7f\u4e1c\u7701\u4e2d\u5c71\u5e02", "\u5e7f\u4e1c\u7701\u6f6e\u5dde\u5e02", "\u5e7f\u4e1c\u7701\u6c55\u5c3e\u5e02", "\u5e7f\u4e1c\u7701\u6cb3\u6e90\u5e02", "\u5e7f\u4e1c\u7701\u6e05\u8fdc\u5e02", "\u5e7f\u4e1c\u7701\u63ed\u9633\u5e02", "\u5e7f\u4e1c\u7701\u4e91\u6d6e\u5e02", "\u5e7f\u4e1c\u7701\u756a\u79ba\u5e02", "\u5e7f\u4e1c\u7701\u82b1\u90fd\u5e02", "\u5e7f\u4e1c\u7701\u589e\u57ce\u5e02", "\u5e7f\u4e1c\u7701\u4ece\u5316\u5e02", "\u5e7f\u4e1c\u7701\u4e50\u660c\u5e02", "\u5e7f\u4e1c\u7701\u5357\u96c4\u5e02", "\u5e7f\u4e1c\u7701\u6f6e\u9633\u5e02", "\u5e7f\u4e1c\u7701\u6f84\u6d77\u5e02", "\u5e7f\u4e1c\u7701\u987a\u5fb7\u5e02", "\u5e7f\u4e1c\u7701\u5357\u6d77\u5e02", "\u5e7f\u4e1c\u7701\u4e09\u6c34\u5e02", "\u5e7f\u4e1c\u7701\u9ad8\u660e\u5e02", "\u5e7f\u4e1c\u7701\u53f0\u5c71\u5e02", "\u5e7f\u4e1c\u7701\u65b0\u4f1a\u5e02", "\u5e7f\u4e1c\u7701\u5f00\u5e73\u5e02", "\u5e7f\u4e1c\u7701\u9e64\u5c71\u5e02", "\u5e7f\u4e1c\u7701\u6069\u5e73\u5e02", "\u5e7f\u4e1c\u7701\u5ec9\u6c5f\u5e02", "\u5e7f\u4e1c\u7701\u96f7\u5dde\u5e02", "\u5e7f\u4e1c\u7701\u5434\u5ddd\u5e02", "\u5e7f\u4e1c\u7701\u9ad8\u5dde\u5e02", "\u5e7f\u4e1c\u7701\u5316\u5dde\u5e02", "\u5e7f\u4e1c\u7701\u4fe1\u5b9c\u5e02", "\u5e7f\u4e1c\u7701\u9ad8\u8981\u5e02", "\u5e7f\u4e1c\u7701\u56db\u4f1a\u5e02", "\u5e7f\u4e1c\u7701\u60e0\u9633\u5e02", "\u5e7f\u4e1c\u7701\u5174\u5b81\u5e02", "\u5e7f\u4e1c\u7701\u9646\u4e30\u5e02",\n\n            "\u5e7f\u4e1c\u7701\u9633\u6625\u5e02", "\u5e7f\u4e1c\u7701\u82f1\u5fb7\u5e02", "\u5e7f\u4e1c\u7701\u8fde\u5dde\u5e02", "\u5e7f\u4e1c\u7701\u666e\u5b81\u5e02", "\u5e7f\u4e1c\u7701\u7f57\u5b9a\u5e02", "\u9655\u897f\u7701\u897f\u5b89\u5e02", "\u9655\u897f\u7701\u94dc\u5ddd\u5e02", "\u9655\u897f\u7701\u5b9d\u9e21\u5e02", "\u9655\u897f\u7701\u54b8\u9633\u5e02", "\u9655\u897f\u7701\u6c49\u4e2d\u5e02", "\u9655\u897f\u7701\u6e2d\u5357\u5e02", "\u9655\u897f\u7701\u5ef6\u5b89\u5e02", "\u9655\u897f\u7701\u6986\u6797\u5e02", "\u9655\u897f\u7701\u5174\u5e73\u5e02", "\u9655\u897f\u7701\u97e9\u57ce\u5e02", "\u9655\u897f\u7701\u534e\u9634\u5e02", "\u9655\u897f\u7701\u5b89\u5eb7\u5e02", "\u9655\u897f\u7701\u5546\u5dde\u5e02", "\u6cb3\u5357\u7701\u90d1\u5dde\u5e02", "\u6cb3\u5357\u7701\u5f00\u5c01\u5e02", "\u6cb3\u5357\u7701\u6d1b\u9633\u5e02", "\u6cb3\u5357\u7701\u5e73\u9876\u5c71\u5e02", "\u6cb3\u5357\u7701\u5b89\u9633\u5e02", "\u6cb3\u5357\u7701\u65b0\u4e61\u5e02", "\u6cb3\u5357\u7701\u7126\u4f5c\u5e02", "\u6cb3\u5357\u7701\u9e64\u58c1\u5e02", "\u6cb3\u5357\u7701\u6fee\u9633\u5e02", "\u6cb3\u5357\u7701\u8bb8\u660c\u5e02", "\u6cb3\u5357\u7701\u6f2f\u6cb3\u5e02", "\u6cb3\u5357\u7701\u5357\u9633\u5e02", "\u6cb3\u5357\u7701\u5546\u4e18\u5e02", "\u6cb3\u5357\u7701\u4e09\u95e8\u5ce1\u5e02", "\u6cb3\u5357\u7701\u4fe1\u9633\u5e02", "\u6cb3\u5357\u7701\u5de9\u4e49\u5e02", "\u6cb3\u5357\u7701\u8365\u9633\u5e02", "\u6cb3\u5357\u7701\u65b0\u5bc6\u5e02", "\u6cb3\u5357\u7701\u65b0\u90d1\u5e02", "\u6cb3\u5357\u7701\u767b\u5c01\u5e02", "\u6cb3\u5357\u7701\u5043\u5e08\u5e02", "\u6cb3\u5357\u7701\u821e\u94a2\u5e02", "\u6cb3\u5357\u7701\u6c5d\u5dde\u5e02", "\u6cb3\u5357\u7701\u6797\u5dde\u5e02", "\u6cb3\u5357\u7701\u536b\u8f89\u5e02", "\u6cb3\u5357\u7701\u8f89\u53bf\u5e02", "\u6cb3\u5357\u7701\u6d4e\u6e90\u5e02", "\u6cb3\u5357\u7701\u6c81\u9633\u5e02", "\u6cb3\u5357\u7701\u5b5f\u5dde\u5e02", "\u6cb3\u5357\u7701\u79b9\u5dde\u5e02", "\u6cb3\u5357\u7701\u957f\u845b\u5e02", "\u6cb3\u5357\u7701\u4e49\u9a6c\u5e02",\n\n            "\u6cb3\u5357\u7701\u7075\u5b9d\u5e02", "\u6cb3\u5357\u7701\u9093\u5dde\u5e02", "\u6cb3\u5357\u7701\u6c38\u57ce\u5e02", "\u6cb3\u5357\u7701\u5468\u53e3\u5e02", "\u6cb3\u5357\u7701\u9879\u57ce\u5e02", "\u6cb3\u5357\u7701\u9a7b\u9a6c\u5e97\u5e02", "\u6c5f\u897f\u7701\u5357\u660c\u5e02", "\u6c5f\u897f\u7701\u666f\u5fb7\u9547\u5e02", "\u6c5f\u897f\u7701\u840d\u4e61\u5e02", "\u6c5f\u897f\u7701\u4e5d\u6c5f\u5e02", "\u6c5f\u897f\u7701\u65b0\u4f59\u5e02", "\u6c5f\u897f\u7701\u9e70\u6f6d\u5e02", "\u6c5f\u897f\u7701\u8d63\u5dde\u5e02", "\u6c5f\u897f\u7701\u4e50\u5e73\u5e02", "\u6c5f\u897f\u7701\u745e\u660c\u5e02", "\u6c5f\u897f\u7701\u8d35\u6eaa\u5e02", "\u6c5f\u897f\u7701\u745e\u91d1\u5e02", "\u6c5f\u897f\u7701\u5357\u5eb7\u5e02", "\u6c5f\u897f\u7701\u5b9c\u6625\u5e02", "\u6c5f\u897f\u7701\u4e30\u57ce\u5e02", "\u6c5f\u897f\u7701\u6a1f\u6811\u5e02", "\u6c5f\u897f\u7701\u9ad8\u5b89\u5e02", "\u6c5f\u897f\u7701\u4e0a\u9976\u5e02", "\u6c5f\u897f\u7701\u5fb7\u5174\u5e02", "\u6c5f\u897f\u7701\u5409\u5b89\u5e02", "\u6c5f\u897f\u7701\u4e95\u5188\u5c71\u5e02", "\u6c5f\u897f\u7701\u4e34\u5ddd\u5e02", "\u6d77\u5357\u7701\u6d77\u53e3\u5e02", "\u6d77\u5357\u7701\u4e09\u4e9a\u5e02", "\u6d77\u5357\u7701\u901a\u4ec0\u5e02", "\u6d77\u5357\u7701\u743c\u6d77\u5e02", "\u6d77\u5357\u7701\u510b\u5dde\u5e02", "\u6d77\u5357\u7701\u743c\u5c71\u5e02", "\u6d77\u5357\u7701\u6587\u660c\u5e02", "\u6d77\u5357\u7701\u4e07\u5b81\u5e02", "\u6d77\u5357\u7701\u4e1c\u65b9\u5e02", "\u5e7f\u897f\u5357\u5b81\u5e02", "\u5e7f\u897f\u67f3\u5dde\u5e02", "\u5e7f\u897f\u6842\u6797\u5e02", "\u5e7f\u897f\u68a7\u5dde\u5e02", "\u5e7f\u897f\u8d35\u6e2f\u5e02", "\u5e7f\u897f\u5317\u6d77\u5e02", "\u5e7f\u897f\u9632\u57ce\u6e2f\u5e02", "\u5e7f\u897f\u94a6\u5dde\u5e02", "\u5e7f\u897f\u7389\u6797\u5e02", "\u5e7f\u897f\u5c91\u6eaa\u5e02", "\u5e7f\u897f\u4e1c\u5174\u5e02", "\u5e7f\u897f\u6842\u5e73\u5e02", "\u5e7f\u897f\u5317\u6d41\u5e02", "\u5e7f\u897f\u51ed\u7965\u5e02",\n\n            "\u5e7f\u897f\u5408\u5c71\u5e02", "\u5e7f\u897f\u8d3a\u5dde\u5e02", "\u5e7f\u897f\u767e\u8272\u5e02", "\u5e7f\u897f\u6cb3\u6c60\u5e02", "\u5e7f\u897f\u5b9c\u5dde\u5e02", "\u5409\u6797\u7701\u957f\u6625\u5e02", "\u5409\u6797\u7701\u5409\u6797\u5e02", "\u5409\u6797\u7701\u56db\u5e73\u5e02", "\u5409\u6797\u7701\u8fbd\u6e90\u5e02", "\u5409\u6797\u7701\u901a\u5316\u5e02", "\u5409\u6797\u7701\u767d\u5c71\u5e02", "\u5409\u6797\u7701\u677e\u539f\u5e02", "\u5409\u6797\u7701\u767d\u57ce\u5e02", "\u5409\u6797\u7701\u4e5d\u53f0\u5e02", "\u5409\u6797\u7701\u6986\u6811\u5e02", "\u5409\u6797\u7701\u5fb7\u60e0\u5e02", "\u5409\u6797\u7701\u86df\u6cb3\u5e02", "\u5409\u6797\u7701\u6866\u7538\u5e02", "\u5409\u6797\u7701\u8212\u5170\u5e02", "\u5409\u6797\u7701\u78d0\u77f3\u5e02", "\u5409\u6797\u7701\u516c\u4e3b\u5cad\u5e02", "\u5409\u6797\u7701\u53cc\u8fbd\u5e02", "\u5409\u6797\u7701\u6885\u6cb3\u53e3\u5e02", "\u5409\u6797\u7701\u96c6\u5b89\u5e02", "\u5409\u6797\u7701\u4e34\u6c5f\u5e02", "\u5409\u6797\u7701\u6d2e\u5357\u5e02", "\u5409\u6797\u7701\u5927\u5b89\u5e02", "\u5409\u6797\u7701\u5ef6\u5409\u5e02", "\u5409\u6797\u7701\u56fe\u4eec\u5e02", "\u5409\u6797\u7701\u6566\u5316\u5e02", "\u5409\u6797\u7701\u73f2\u6625\u5e02", "\u5409\u6797\u7701\u9f99\u4e95\u5e02", "\u5409\u6797\u7701\u548c\u9f99\u5e02", "\u4e0a\u6d77\u5e02", "\u5317\u4eac\u5e02", "\u65b0\u7586\u4e4c\u9c81\u6728\u9f50\u5e02", "\u65b0\u7586\u514b\u62c9\u739b\u4f9d\u5e02", "\u65b0\u7586\u5410\u9c81\u756a\u5e02", "\u65b0\u7586\u54c8\u5bc6\u5e02", "\u65b0\u7586\u660c\u5409\u5e02", "\u65b0\u7586\u961c\u5eb7\u5e02", "\u65b0\u7586\u7c73\u6cc9\u5e02", "\u65b0\u7586\u535a\u4e50\u5e02", "\u65b0\u7586\u5e93\u5c14\u52d2\u5e02", "\u65b0\u7586\u963f\u514b\u82cf\u5e02", "\u65b0\u7586\u963f\u56fe\u4ec0\u5e02", "\u65b0\u7586\u5580\u4ec0\u5e02", "\u65b0\u7586\u548c\u7530\u5e02", "\u65b0\u7586\u594e\u5c6f\u5e02", "\u65b0\u7586\u4f0a\u5b81\u5e02",\n\n            "\u65b0\u7586\u5854\u57ce\u5e02", "\u65b0\u7586\u4e4c\u82cf\u5e02", "\u65b0\u7586\u963f\u52d2\u6cf0\u5e02", "\u5409\u6797\u7701\u957f\u6625\u5e02", "\u5409\u6797\u7701\u5409\u6797\u5e02", "\u5409\u6797\u7701\u56db\u5e73\u5e02", "\u5409\u6797\u7701\u8fbd\u6e90\u5e02", "\u5409\u6797\u7701\u901a\u5316\u5e02", "\u5409\u6797\u7701\u767d\u5c71\u5e02", "\u5409\u6797\u7701\u677e\u539f\u5e02", "\u5409\u6797\u7701\u767d\u57ce\u5e02", "\u5409\u6797\u7701\u4e5d\u53f0\u5e02", "\u5409\u6797\u7701\u6986\u6811\u5e02", "\u5409\u6797\u7701\u5fb7\u60e0\u5e02", "\u5409\u6797\u7701\u86df\u6cb3\u5e02", "\u5409\u6797\u7701\u6866\u7538\u5e02", "\u5409\u6797\u7701\u8212\u5170\u5e02", "\u5409\u6797\u7701\u78d0\u77f3\u5e02", "\u5409\u6797\u7701\u516c\u4e3b\u5cad\u5e02", "\u5409\u6797\u7701\u53cc\u8fbd\u5e02", "\u5409\u6797\u7701\u6885\u6cb3\u53e3\u5e02", "\u5409\u6797\u7701\u96c6\u5b89\u5e02", "\u5409\u6797\u7701\u4e34\u6c5f\u5e02", "\u5409\u6797\u7701\u6d2e\u5357\u5e02", "\u5409\u6797\u7701\u5927\u5b89\u5e02", "\u5409\u6797\u7701\u5ef6\u5409\u5e02", "\u5409\u6797\u7701\u56fe\u4eec\u5e02", "\u5409\u6797\u7701\u6566\u5316\u5e02", "\u5409\u6797\u7701\u73f2\u6625\u5e02", "\u5409\u6797\u7701\u9f99\u4e95\u5e02", "\u5409\u6797\u7701\u548c\u9f99\u5e02", "\u5b81\u590f\u94f6\u5ddd\u5e02", "\u5b81\u590f\u77f3\u5634\u5c71\u5e02", "\u5b81\u590f\u5434\u5fe0\u5e02", "\u5b81\u590f\u9752\u94dc\u5ce1\u5e02", "\u5b81\u590f\u7075\u6b66\u5e02", "\u5b89\u5fbd\u7701\u5408\u80a5\u5e02", "\u5b89\u5fbd\u7701\u6dee\u5357\u5e02", "\u5b89\u5fbd\u7701\u6dee\u5317\u5e02", "\u5b89\u5fbd\u7701\u829c\u6e56\u5e02", "\u5b89\u5fbd\u7701\u868c\u57e0\u5e02", "\u5b89\u5fbd\u7701\u9a6c\u978d\u5c71\u5e02", "\u5b89\u5fbd\u7701\u94dc\u9675\u5e02", "\u5b89\u5fbd\u7701\u5b89\u5e86\u5e02", "\u5b89\u5fbd\u7701\u961c\u9633\u5e02", "\u5b89\u5fbd\u7701\u9ec4\u5c71\u5e02", "\u5b89\u5fbd\u7701\u6ec1\u5dde\u5e02", "\u5b89\u5fbd\u7701\u5bbf\u5dde\u5e02", "\u5b89\u5fbd\u7701\u5de2\u6e56\u5e02", "\u5b89\u5fbd\u7701\u516d\u5b89\u5e02",\n\n            "\u5b89\u5fbd\u7701\u6850\u57ce\u5e02", "\u5b89\u5fbd\u7701\u5929\u957f\u5e02", "\u5b89\u5fbd\u7701\u660e\u5149\u5e02", "\u5b89\u5fbd\u7701\u4eb3\u5dde\u5e02", "\u5b89\u5fbd\u7701\u754c\u9996\u5e02", "\u5b89\u5fbd\u7701\u5ba3\u5dde\u5e02", "\u5b89\u5fbd\u7701\u5b81\u56fd\u5e02", "\u5b89\u5fbd\u7701\u8d35\u6c60\u5e02", "\u6cb3\u5317\u7701\u77f3\u5bb6\u5e84\u5e02", "\u6cb3\u5317\u7701\u5510\u5c71\u5e02", "\u6cb3\u5317\u7701\u90af\u90f8\u5e02", "\u6cb3\u5317\u7701\u4fdd\u5b9a\u5e02", "\u6cb3\u5317\u7701\u5f20\u5bb6\u53e3\u5e02", "\u6cb3\u5317\u7701\u79e6\u7687\u5c9b\u5e02", "\u6cb3\u5317\u7701\u90a2\u53f0\u5e02", "\u6cb3\u5317\u7701\u627f\u5fb7\u5e02", "\u6cb3\u5317\u7701\u6ca7\u5dde\u5e02", "\u6cb3\u5317\u7701\u5eca\u574a\u5e02", "\u6cb3\u5317\u7701\u8861\u6c34\u5e02", "\u6cb3\u5317\u7701\u8f9b\u96c6\u5e02", "\u6cb3\u5317\u7701\u85c1\u57ce\u5e02", "\u6cb3\u5317\u7701\u664b\u5dde\u5e02", "\u6cb3\u5317\u7701\u65b0\u4e50\u5e02", "\u6cb3\u5317\u7701\u9e7f\u6cc9\u5e02", "\u6cb3\u5317\u7701\u9075\u5316\u5e02", "\u6cb3\u5317\u7701\u4e30\u5357\u5e02", "\u6cb3\u5317\u7701\u8fc1\u5b89\u5e02", "\u6cb3\u5317\u7701\u6b66\u5b89\u5e02", "\u6cb3\u5317\u7701\u5357\u5bab\u5e02", "\u6cb3\u5317\u7701\u6c99\u6cb3\u5e02", "\u6cb3\u5317\u7701\u6dbf\u5dde\u5e02", "\u6cb3\u5317\u7701\u5b9a\u5dde\u5e02", "\u6cb3\u5317\u7701\u5b89\u56fd\u5e02", "\u6cb3\u5317\u7701\u9ad8\u7891\u5e97\u5e02", "\u6cb3\u5317\u7701\u6cca\u5934\u5e02", "\u6cb3\u5317\u7701\u4efb\u4e18\u5e02", "\u6cb3\u5317\u7701\u9ec4\u9a85\u5e02", "\u6cb3\u5317\u7701\u6cb3\u95f4\u5e02", "\u6cb3\u5317\u7701\u9738\u5dde\u5e02", "\u6cb3\u5317\u7701\u4e09\u6cb3\u5e02", "\u6cb3\u5317\u7701\u5180\u5dde\u5e02", "\u6cb3\u5317\u7701\u6df1\u5dde\u5e02", "\u7518\u8083\u7701\u5170\u5dde\u5e02", "\u7518\u8083\u7701\u767d\u94f6\u5e02", "\u7518\u8083\u7701\u5929\u6c34\u5e02", "\u7518\u8083\u7701\u5609\u5cea\u5173\u5e02", "\u7518\u8083\u7701\u91d1\u660c\u5e02", "\u7518\u8083\u7701\u7389\u95e8\u5e02", "\u7518\u8083\u7701\u9152\u6cc9\u5e02", "\u7518\u8083\u7701\u6566\u714c\u5e02",\n\n            "\u7518\u8083\u7701\u5f20\u6396\u5e02", "\u7518\u8083\u7701\u6b66\u5a01\u5e02", "\u7518\u8083\u7701\u5e73\u51c9\u5e02", "\u7518\u8083\u7701\u897f\u5cf0\u5e02", "\u7518\u8083\u7701\u4e34\u590f\u5e02", "\u7518\u8083\u7701\u5408\u4f5c\u5e02", "\u5c71\u897f\u7701\u592a\u539f\u5e02", "\u5c71\u897f\u7701\u5927\u540c\u5e02", "\u5c71\u897f\u7701\u9633\u6cc9\u5e02", "\u5c71\u897f\u7701\u957f\u6cbb\u5e02", "\u5c71\u897f\u7701\u664b\u57ce\u5e02", "\u5c71\u897f\u7701\u6714\u5dde\u5e02", "\u5c71\u897f\u7701\u53e4\u4ea4\u5e02", "\u5c71\u897f\u7701\u6f5e\u57ce\u5e02", "\u5c71\u897f\u7701\u9ad8\u5e73\u5e02", "\u5c71\u897f\u7701\u5ffb\u5dde\u5e02", "\u5c71\u897f\u7701\u539f\u5e73\u5e02", "\u5c71\u897f\u7701\u5b5d\u4e49\u5e02", "\u5c71\u897f\u7701\u79bb\u77f3\u5e02", "\u5c71\u897f\u7701\u6c7e\u9633\u5e02", "\u5c71\u897f\u7701\u6986\u6b21\u5e02", "\u5c71\u897f\u7701\u4ecb\u4f11\u5e02", "\u5c71\u897f\u7701\u4e34\u6c7e\u5e02", "\u5c71\u897f\u7701\u4faf\u9a6c\u5e02", "\u5c71\u897f\u7701\u970d\u5dde\u5e02", "\u5c71\u897f\u7701\u8fd0\u57ce\u5e02", "\u5c71\u897f\u7701\u6c38\u6d4e\u5e02", "\u5c71\u897f\u7701\u6cb3\u6d25\u5e02", "\u6c5f\u82cf\u7701\u5357\u4eac\u5e02", "\u6c5f\u82cf\u7701\u5f90\u5dde\u5e02", "\u6c5f\u82cf\u7701\u65e0\u9521\u5e02", "\u6c5f\u82cf\u7701\u5e38\u5dde\u5e02", "\u6c5f\u82cf\u7701\u82cf\u5dde\u5e02", "\u6c5f\u82cf\u7701\u5357\u901a\u5e02", "\u6c5f\u82cf\u7701\u8fde\u4e91\u6e2f\u5e02", "\u6c5f\u82cf\u7701\u6dee\u9634\u5e02", "\u6c5f\u82cf\u7701\u76d0\u57ce\u5e02", "\u6c5f\u82cf\u7701\u626c\u5dde\u5e02", "\u6c5f\u82cf\u7701\u9547\u6c5f\u5e02", "\u6c5f\u82cf\u7701\u6cf0\u5dde\u5e02", "\u6c5f\u82cf\u7701\u5bbf\u8fc1\u5e02", "\u6c5f\u82cf\u7701\u6c5f\u9634\u5e02", "\u6c5f\u82cf\u7701\u5b9c\u5174\u5e02", "\u6c5f\u82cf\u7701\u9521\u5c71\u5e02", "\u6c5f\u82cf\u7701\u65b0\u6c82\u5e02", "\u6c5f\u82cf\u7701\u90b3\u5dde\u5e02", "\u6c5f\u82cf\u7701\u6ea7\u9633\u5e02", "\u6c5f\u82cf\u7701\u91d1\u575b\u5e02", "\u6c5f\u82cf\u7701\u6b66\u8fdb\u5e02", "\u6c5f\u82cf\u7701\u5e38\u719f\u5e02",\n\n            "\u6c5f\u82cf\u7701\u5f20\u5bb6\u6e2f\u5e02", "\u6c5f\u82cf\u7701\u6606\u5c71\u5e02", "\u6c5f\u82cf\u7701\u5434\u6c5f\u5e02", "\u6c5f\u82cf\u7701\u592a\u4ed3\u5e02", "\u6c5f\u82cf\u7701\u5434\u53bf\u5e02", "\u6c5f\u82cf\u7701\u542f\u4e1c\u5e02", "\u6c5f\u82cf\u7701\u5982\u768b\u5e02", "\u6c5f\u82cf\u7701\u901a\u5dde\u5e02", "\u6c5f\u82cf\u7701\u6d77\u95e8\u5e02", "\u6c5f\u82cf\u7701\u6dee\u5b89\u5e02", "\u6c5f\u82cf\u7701\u4e1c\u53f0\u5e02", "\u6c5f\u82cf\u7701\u5927\u4e30\u5e02", "\u6c5f\u82cf\u7701\u4eea\u5f81\u5e02", "\u6c5f\u82cf\u7701\u9ad8\u90ae\u5e02", "\u6c5f\u82cf\u7701\u6c5f\u90fd\u5e02", "\u6c5f\u82cf\u7701\u4e39\u9633\u5e02", "\u6c5f\u82cf\u7701\u626c\u4e2d\u5e02", "\u6c5f\u82cf\u7701\u53e5\u5bb9\u5e02", "\u6c5f\u82cf\u7701\u5174\u5316\u5e02", "\u6c5f\u82cf\u7701\u9756\u6c5f\u5e02", "\u6c5f\u82cf\u7701\u6cf0\u5174\u5e02", "\u6c5f\u82cf\u7701\u59dc\u5830\u5e02", "\u56db\u5ddd\u7701\u6210\u90fd\u5e02", "\u56db\u5ddd\u7701\u81ea\u8d21\u5e02", "\u56db\u5ddd\u7701\u6500\u679d\u82b1\u5e02", "\u56db\u5ddd\u7701\u6cf8\u5dde\u5e02", "\u56db\u5ddd\u7701\u5fb7\u9633\u5e02", "\u56db\u5ddd\u7701\u7ef5\u9633\u5e02", "\u56db\u5ddd\u7701\u5e7f\u5143\u5e02", "\u56db\u5ddd\u7701\u9042\u5b81\u5e02", "\u56db\u5ddd\u7701\u5185\u6c5f\u5e02", "\u56db\u5ddd\u7701\u4e50\u5c71\u5e02", "\u56db\u5ddd\u7701\u5357\u5145\u5e02", "\u56db\u5ddd\u7701\u5b9c\u5bbe\u5e02", "\u56db\u5ddd\u7701\u8fbe\u5dde\u5e02", "\u56db\u5ddd\u7701\u90fd\u6c5f\u5830\u5e02", "\u56db\u5ddd\u7701\u5f6d\u5dde\u5e02", "\u56db\u5ddd\u7701\u909b\u5d03\u5e02", "\u56db\u5ddd\u7701\u5d07\u5dde\u5e02", "\u56db\u5ddd\u7701\u5e7f\u6c49\u5e02", "\u56db\u5ddd\u7701\u4ec0\u90a1\u5e02", "\u56db\u5ddd\u7701\u7ef5\u7af9\u5e02", "\u56db\u5ddd\u7701\u6c5f\u6cb9\u5e02", "\u56db\u5ddd\u7701\u5ce8\u7709\u5c71\u5e02", "\u56db\u5ddd\u7701\u9606\u4e2d\u5e02", "\u56db\u5ddd\u7701\u534e\u84e5\u5e02", "\u56db\u5ddd\u7701\u4e07\u6e90\u5e02", "\u56db\u5ddd\u7701\u96c5\u5b89\u5e02", "\u56db\u5ddd\u7701\u897f\u660c\u5e02", "\u56db\u5ddd\u7701\u5df4\u4e2d\u5e02",\n\n            "\u56db\u5ddd\u7701\u8d44\u9633\u5e02", "\u56db\u5ddd\u7701\u7b80\u9633\u5e02", "\u56db\u5ddd\u7701\u5e7f\u5b89\u5e02", "\u798f\u5efa\u7701\u798f\u5dde\u5e02", "\u798f\u5efa\u7701\u53a6\u95e8\u5e02", "\u798f\u5efa\u7701\u6cc9\u5dde\u5e02", "\u798f\u5efa\u7701\u6f33\u5dde\u5e02", "\u798f\u5efa\u7701\u5357\u5e73\u5e02", "\u798f\u5efa\u7701\u9f99\u5ca9\u5e02", "\u798f\u5efa\u7701\u8386\u7530\u5e02", "\u798f\u5efa\u7701\u4e09\u660e\u5e02", "\u798f\u5efa\u7701\u798f\u6e05\u5e02", "\u798f\u5efa\u7701\u957f\u4e50\u5e02", "\u798f\u5efa\u7701\u6c38\u5b89\u5e02", "\u798f\u5efa\u7701\u77f3\u72ee\u5e02", "\u798f\u5efa\u7701\u664b\u6c5f\u5e02", "\u798f\u5efa\u7701\u5357\u5b89\u5e02", "\u798f\u5efa\u7701\u9f99\u6d77\u5e02", "\u798f\u5efa\u7701\u90b5\u6b66\u5e02", "\u798f\u5efa\u7701\u6b66\u5937\u5c71\u5e02", "\u798f\u5efa\u7701\u5efa\u74ef\u5e02", "\u798f\u5efa\u7701\u5efa\u9633\u5e02", "\u798f\u5efa\u7701\u6f33\u5e73\u5e02", "\u798f\u5efa\u7701\u5b81\u5fb7\u5e02", "\u798f\u5efa\u7701\u798f\u5b89\u5e02", "\u798f\u5efa\u7701\u798f\u9f0e\u5e02", "\u5185\u8499\u5305\u5934\u5e02", "\u5185\u8499\u547c\u548c\u6d69\u7279\u5e02", "\u5185\u8499\u4e4c\u6d77\u5e02", "\u5185\u8499\u8d64\u5cf0\u5e02", "\u5185\u8499\u901a\u8fbd\u5e02", "\u5185\u8499\u970d\u6797\u90ed\u52d2\u5e02", "\u5185\u8499\u6d77\u62c9\u5c14\u5e02", "\u5185\u8499\u6ee1\u6d32\u91cc\u5e02", "\u5185\u8499\u624e\u5170\u5c6f\u5e02", "\u5185\u8499\u7259\u514b\u77f3\u5e02", "\u5185\u8499\u6839\u6cb3\u5e02", "\u5185\u8499\u989d\u5c14\u53e4\u7eb3\u5e02", "\u5185\u8499\u4e4c\u5170\u6d69\u7279\u5e02", "\u5185\u8499\u4e8c\u8fde\u6d69\u7279\u5e02", "\u5185\u8499\u9521\u6797\u6d69\u7279\u5e02", "\u5185\u8499\u96c6\u5b81\u5e02", "\u5185\u8499\u4e30\u9547\u5e02", "\u5185\u8499\u4e1c\u80dc\u5e02", "\u5185\u8499\u4e34\u6cb3\u5e02", "\u6e56\u5357\u7701\u957f\u6c99\u5e02", "\u6e56\u5357\u7701\u682a\u6d32\u5e02", "\u6e56\u5357\u7701\u6e58\u6f6d\u5e02", "\u6e56\u5357\u7701\u8861\u9633\u5e02", "\u6e56\u5357\u7701\u90b5\u9633\u5e02",\n\n            "\u6e56\u5357\u7701\u5cb3\u9633\u5e02", "\u6e56\u5357\u7701\u5e38\u5fb7\u5e02", "\u6e56\u5357\u7701\u76ca\u9633\u5e02", "\u6e56\u5357\u7701\u90f4\u5dde\u5e02", "\u6e56\u5357\u7701\u6c38\u5dde\u5e02", "\u6e56\u5357\u7701\u6000\u5316\u5e02", "\u6e56\u5357\u7701\u5f20\u5bb6\u754c\u5e02", "\u6e56\u5357\u7701\u5a04\u5e95\u5e02", "\u6e56\u5357\u7701\u6d4f\u9633\u5e02", "\u6e56\u5357\u7701\u91b4\u9675\u5e02", "\u6e56\u5357\u7701\u6e58\u4e61\u5e02", "\u6e56\u5357\u7701\u97f6\u5c71\u5e02", "\u6e56\u5357\u7701\u8012\u9633\u5e02", "\u6e56\u5357\u7701\u5e38\u5b81\u5e02", "\u6e56\u5357\u7701\u6b66\u5188\u5e02", "\u6e56\u5357\u7701\u6c69\u7f57\u5e02", "\u6e56\u5357\u7701\u4e34\u6e58\u5e02", "\u6e56\u5357\u7701\u6d25\u5e02", "\u6e56\u5357\u7701\u6c85\u6c5f\u5e02", "\u6e56\u5357\u7701\u8d44\u5174\u5e02", "\u6e56\u5357\u7701\u6d2a\u6c5f\u5e02", "\u6e56\u5357\u7701\u51b7\u6c34\u6c5f\u5e02", "\u6e56\u5357\u7701\u6d9f\u6e90\u5e02", "\u6e56\u5357\u7701\u5409\u9996\u5e02", "\u8d35\u5dde\u7701\u8d35\u9633\u5e02", "\u8d35\u5dde\u7701\u516d\u76d8\u6c34\u5e02", "\u8d35\u5dde\u7701\u9075\u4e49\u5e02", "\u8d35\u5dde\u7701\u6e05\u9547\u5e02", "\u8d35\u5dde\u7701\u8d64\u6c34\u5e02", "\u8d35\u5dde\u7701\u4ec1\u6000\u5e02", "\u8d35\u5dde\u7701\u94dc\u4ec1\u5e02", "\u8d35\u5dde\u7701\u5174\u4e49\u5e02", "\u8d35\u5dde\u7701\u6bd5\u8282\u5e02", "\u8d35\u5dde\u7701\u5b89\u987a\u5e02", "\u8d35\u5dde\u7701\u51ef\u91cc\u5e02", "\u8d35\u5dde\u7701\u90fd\u5300\u5e02", "\u8d35\u5dde\u7701\u798f\u6cc9\u5e02", "\u8fbd\u5b81\u7701\u6c88\u9633\u5e02", "\u8fbd\u5b81\u7701\u5927\u8fde\u5e02", "\u8fbd\u5b81\u7701\u978d\u5c71\u5e02", "\u8fbd\u5b81\u7701\u629a\u987a\u5e02", "\u8fbd\u5b81\u7701\u672c\u6eaa\u5e02", "\u8fbd\u5b81\u7701\u4e39\u4e1c\u5e02", "\u8fbd\u5b81\u7701\u9526\u5dde\u5e02", "\u8fbd\u5b81\u7701\u961c\u65b0\u5e02", "\u8fbd\u5b81\u7701\u8fbd\u9633\u5e02", "\u8fbd\u5b81\u7701\u8425\u53e3\u5e02", "\u8fbd\u5b81\u7701\u76d8\u9526\u5e02", "\u8fbd\u5b81\u7701\u94c1\u5cad\u5e02", "\u8fbd\u5b81\u7701\u671d\u9633\u5e02",\n\n            "\u8fbd\u5b81\u7701\u846b\u82a6\u5c9b\u5e02", "\u8fbd\u5b81\u7701\u65b0\u6c11\u5e02", "\u8fbd\u5b81\u7701\u74e6\u623f\u5e97\u5e02", "\u8fbd\u5b81\u7701\u666e\u5170\u5e97\u5e02", "\u8fbd\u5b81\u7701\u5e84\u6cb3\u5e02", "\u8fbd\u5b81\u7701\u6d77\u57ce\u5e02", "\u8fbd\u5b81\u7701\u4e1c\u6e2f\u5e02", "\u8fbd\u5b81\u7701\u51e4\u57ce\u5e02", "\u8fbd\u5b81\u7701\u51cc\u6d77\u5e02", "\u8fbd\u5b81\u7701\u5317\u5b81\u5e02", "\u8fbd\u5b81\u7701\u76d6\u5dde\u5e02", "\u8fbd\u5b81\u7701\u5927\u77f3\u6865\u5e02", "\u8fbd\u5b81\u7701\u706f\u5854\u5e02", "\u8fbd\u5b81\u7701\u94c1\u6cd5\u5e02", "\u8fbd\u5b81\u7701\u5f00\u539f\u5e02", "\u8fbd\u5b81\u7701\u5317\u7968\u5e02", "\u8fbd\u5b81\u7701\u51cc\u6e90\u5e02", "\u8fbd\u5b81\u7701\u5174\u57ce\u5e02", "\u5c71\u4e1c\u7701\u6d4e\u5357\u5e02", "\u5c71\u4e1c\u7701\u9752\u5c9b\u5e02", "\u5c71\u4e1c\u7701\u6dc4\u535a\u5e02", "\u5c71\u4e1c\u7701\u67a3\u5e84\u5e02", "\u5c71\u4e1c\u7701\u70df\u53f0\u5e02", "\u5c71\u4e1c\u7701\u6f4d\u574a\u5e02", "\u5c71\u4e1c\u7701\u6cf0\u5b89\u5e02", "\u5c71\u4e1c\u7701\u4e34\u6c82\u5e02", "\u5c71\u4e1c\u7701\u4e1c\u8425\u5e02", "\u5c71\u4e1c\u7701\u6d4e\u5b81\u5e02", "\u5c71\u4e1c\u7701\u5a01\u6d77\u5e02", "\u5c71\u4e1c\u7701\u65e5\u7167\u5e02", "\u5c71\u4e1c\u7701\u83b1\u829c\u5e02", "\u5c71\u4e1c\u7701\u5fb7\u5dde\u5e02", "\u5c71\u4e1c\u7701\u804a\u57ce\u5e02", "\u5c71\u4e1c\u7701\u7ae0\u4e18\u5e02", "\u5c71\u4e1c\u7701\u80f6\u5dde\u5e02", "\u5c71\u4e1c\u7701\u5373\u58a8\u5e02", "\u5c71\u4e1c\u7701\u5e73\u5ea6\u5e02", "\u5c71\u4e1c\u7701\u80f6\u5357\u5e02", "\u5c71\u4e1c\u7701\u83b1\u897f\u5e02", "\u5c71\u4e1c\u7701\u6ed5\u5dde\u5e02", "\u5c71\u4e1c\u7701\u9f99\u53e3\u5e02", "\u5c71\u4e1c\u7701\u83b1\u9633\u5e02", "\u5c71\u4e1c\u7701\u83b1\u5dde\u5e02", "\u5c71\u4e1c\u7701\u84ec\u83b1\u5e02", "\u5c71\u4e1c\u7701\u62db\u8fdc\u5e02", "\u5c71\u4e1c\u7701\u6816\u971e\u5e02", "\u5c71\u4e1c\u7701\u6d77\u9633\u5e02", "\u5c71\u4e1c\u7701\u9752\u5dde\u5e02", "\u5c71\u4e1c\u7701\u8bf8\u57ce\u5e02", "\u5c71\u4e1c\u7701\u5bff\u5149\u5e02",\n\n            "\u5c71\u4e1c\u7701\u5b89\u4e18\u5e02", "\u5c71\u4e1c\u7701\u9ad8\u5bc6\u5e02", "\u5c71\u4e1c\u7701\u660c\u9091\u5e02", "\u5c71\u4e1c\u7701\u66f2\u961c\u5e02", "\u5c71\u4e1c\u7701\u5156\u5dde\u5e02", "\u5c71\u4e1c\u7701\u90b9\u57ce\u5e02", "\u5c71\u4e1c\u7701\u65b0\u6cf0\u5e02", "\u5c71\u4e1c\u7701\u80a5\u57ce\u5e02", "\u5c71\u4e1c\u7701\u6587\u767b\u5e02", "\u5c71\u4e1c\u7701\u8363\u6210\u5e02", "\u5c71\u4e1c\u7701\u4e73\u5c71\u5e02", "\u5c71\u4e1c\u7701\u4e50\u9675\u5e02", "\u5c71\u4e1c\u7701\u79b9\u57ce\u5e02", "\u5c71\u4e1c\u7701\u4e34\u6e05\u5e02", "\u5c71\u4e1c\u7701\u6ee8\u5dde\u5e02", "\u5c71\u4e1c\u7701\u83cf\u6cfd\u5e02"\n    };\n\n    //\u8eab\u4efd\u8bc1\u7701\u3001\u81ea\u6cbb\u533a\u3001\u76f4\u8f96\u5e02\u4ee3\u7801\n    private static final String[] provinces = {\n            "11", "12", "13", "14", "15", "21", "22", "23", "31", "32",\n\n            "33", "34", "35", "36", "37", "41", "42", "43", "44", "45",\n\n            "46", "50", "51", "52", "53", "54", "61", "62", "63", "64",\n\n            "65", "71", "81", "82"\n    };\n\n    //\u8eab\u4efd\u8bc1\u6821\u9a8c\u7801\n    private static final String[] checks = {\n            "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "X"\n    };\n\n    //\u624b\u673a\u53f7\u7801\n    private static final String[] telFirst = {\n            "134", "135", "136", "137", "138", "139", "150", "151", "152",\n\n            "157", "158", "159", "130", "131", "132", "155", "156", "133",\n\n            "153"\n    };\n\n    //\u90ae\u7bb1\u76f8\u5173\n    private static final String[] email_suffix = {\n            "@gmail.com", "@yahoo.com", "@msn.com", "@hotmail.com", "@aol.com", "@ask.com",\n            "@live.com", "@qq.com", "@0355.net", "@163.com", "@163.net", "@263.net",\n            "@3721.net", "@yeah.net", "@gmail.com", "@126.com", "@sina.com",\n            "@sohu.com", "@yahoo.com.cn"\n    };\n\n    //\u90ae\u7bb1\u76f8\u5173\n    private static final char[] base = {\n            \'a\', \'b\', \'c\', \'d\', \'e\', \'f\', \'g\', \'h\', \'i\',\n\n            \'j\', \'k\', \'l\', \'m\', \'n\', \'o\', \'p\', \'q\', \'r\',\n\n            \'s\', \'t\', \'u\', \'v\', \'w\', \'x\', \'y\', \'z\', \'0\',\n\n            \'1\', \'2\', \'3\', \'4\', \'5\', \'6\', \'7\', \'8\', \'9\'\n    };\n\n\n    private static String birthDay = "";\n    private static int age = 0;\n    private static String name_sex = "";\n    private static final Random random = new Random();\n\n\n    public static void main(String[] args) {\n        for (int i = 0; i < 10; i++) {\n            System.out.println(getUserData());\n        }\n    }\n\n    /**\n     * \u83b7\u53d6\u968f\u673a\u751f\u6210\u7684\u8eab\u4efd\u8bc1\u53f7\u7801\n     *\n     * @return\n     */\n    public static String getRandomID() {\n        // \u968f\u673a\u751f\u6210\u7701\u3001\u81ea\u6cbb\u533a\u3001\u76f4\u8f96\u5e02\u4ee3\u7801 1-2\n        String province = randomOne(provinces);\n        // \u968f\u673a\u751f\u6210\u5730\u7ea7\u5e02\u3001\u76df\u3001\u81ea\u6cbb\u5dde\u4ee3\u7801 3-4\n        String city = randomCityCode(18);\n        // \u968f\u673a\u751f\u6210\u53bf\u3001\u53bf\u7ea7\u5e02\u3001\u533a\u4ee3\u7801 5-6\n        String county = randomCityCode(28);\n        // \u968f\u673a\u751f\u6210\u51fa\u751f\u5e74\u6708 7-14\n        String birth = isExistBirthDay() ? birthDay : getRandomBirth(20, 50);\n        // \u968f\u673a\u751f\u6210\u987a\u5e8f\u53f7 15-16\n        String no = Integer.toString(getNum(10, 99));\n        // \u6027\u522b\u7801\n        String sex = isExistSex() ? (name_sex.equals("\u5973") ? getSexCode(1) : getSexCode(0)) : Integer.toString(getNum(10));\n        // \u968f\u673a\u751f\u6210\u6821\u9a8c\u7801 18\n        String check = randomOne(checks);\n        // \u62fc\u63a5\u8eab\u4efd\u8bc1\u53f7\u7801\n        return province + city + county + birth + no + sex + check;\n    }\n\n    private static String getSexCode(int i) {\n        Random random = new Random();\n        String[] boyCode = {"1", "3", "5", "7", "9"};\n        String[] girlCode = {"0", "2", "4", "6", "8"};\n        return i == 0 ? boyCode[random.nextInt(boyCode.length)] : girlCode[random.nextInt(girlCode.length)];\n    }\n\n    /**\n     * \u968f\u673a\u751f\u6210minAge\u5230maxAge\u5e74\u9f84\u6bb5\u7684\u4eba\u7684\u751f\u65e5\u65e5\u671f\n     *\n     * @param minAge\n     * @param maxAge\n     * @return\n     */\n    public static String getRandomBirth(int minAge, int maxAge) {\n        SimpleDateFormat dft = new SimpleDateFormat("yyyyMMdd");\n        Calendar date = Calendar.getInstance();\n        Calendar date2 = Calendar.getInstance();\n        // \u83b7\u53d6\u5f53\u524d\u65e5\u671f\n        date.setTime(new Date());\n        date2.setTime(new Date());\n        // \u8bbe\u7f6e\u65e5\u671f\u4e3a\u524dmaxAge\u5e74\u5230\u524dminAge\u5e74\u7684\u4efb\u610f\u4e00\u5929\n        int randomDay = 365 * minAge + getNum(365 * (maxAge - minAge));\n        date.set(Calendar.DATE, date.get(Calendar.DATE) - randomDay);\n        // \u8bbe\u7f6e\u5e74\u9f84\n        age = date2.get(Calendar.YEAR) - date.get(Calendar.YEAR);\n        birthDay = dft.format(date.getTime());\n        return birthDay;\n    }\n\n    /**\n     * \u83b7\u5f97\u5e74\u9f84\uff0c\u5982\u679c\u672a\u8bbe\u7f6e\u5219\u968f\u673a\u53bb9~55\n     *\n     * @return\n     */\n    public static int getAge() {\n        return age == 0 ? getNum(9, 55) : age;\n    }\n\n    /**\n     * \u8fd4\u56deEmail\n     *\n     * @param lMin \u6700\u5c0f\u957f\u5ea6\n     * @param lMax \u6700\u5927\u957f\u5ea6\n     * @return\n     */\n    public static String getEmail(int lMin, int lMax) {\n        int length = getNum(lMin, lMax);\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < length; i++) {\n            int number = getNum(base.length);\n            sb.append(base[number]);\n        }\n        sb.append(email_suffix[getNum(email_suffix.length)]);\n        return sb.toString();\n    }\n\n    /**\n     * \u624b\u673a\u53f7\u7801\n     *\n     * @return\n     */\n    public static String getTel() {\n        int index = getNum(telFirst.length);\n        String first = telFirst[index];\n        String second = String.valueOf(getNum(1, 888) + 10000).substring(1);\n        String third = String.valueOf(getNum(1, 9100) + 10000).substring(1);\n        return first + second + third;\n    }\n\n    /**\n     * \u968f\u673a\u83b7\u5f97(\u4e2d\u6587) \u59d3\u6c0f+\u540d\u5b57\n     *\n     * @return\n     */\n    public static String getChineseName() {\n        int sex = getNum(2);\n        int hasThird = getNum(2);\n        return getFirstName() + getLastName(sex, hasThird);\n    }\n\n    /**\n     * \u83b7\u5f97\u59d3\u6c0f\n     *\n     * @return\n     */\n    private static String getFirstName() {\n        int index = getNum(firstNames.length);\n        return firstNames[index];\n    }\n\n    /**\n     * \u968f\u673a\u83b7\u5f97\u540d\u5b57\uff0c\u5e76\u5224\u65ad\u6027\u522b\n     *\n     * @param sex\n     * @param hasThird\n     * @return\n     */\n    private static String getLastName(int sex, int hasThird) {\n        int index = 0;\n        String[] str = new String[0];\n        if (sex == 0 && hasThird == 0) {\n            name_sex = "\u7537";\n            str = boy;\n            index = getNum(str.length);\n        }\n        if (sex == 0 && hasThird == 1) {\n            name_sex = "\u7537";\n            str = boy2;\n            index = getNum(str.length);\n        }\n        if (sex == 1 && hasThird == 0) {\n            name_sex = "\u5973";\n            str = girl;\n            index = getNum(str.length);\n        }\n        if (sex == 1 && hasThird == 1) {\n            name_sex = "\u5973";\n            str = girl2;\n            index = getNum(str.length);\n        }\n        return str[index];\n    }\n\n    /**\n     * \u8fd4\u56de\u6027\u522b\uff0c\u5982\u679c\u672a\u8bbe\u7f6e\u5219\u968f\u673a\u9009\u62e9\u7537\u6216\u5973\n     *\n     * @return\n     */\n    public static String getSex() {\n        return name_sex.equals("") ? (getNum(2) == 0 ? "\u5973" : "\u7537") : name_sex;\n    }\n\n    /**\n     * \u8fd4\u56de\u5730\u5740\n     *\n     * @return\n     */\n    public static String getAddress() {\n        return road[getNum(road.length)] + getNum(11, 150) + "\u53f7" + "-" + getNum(1, 20) + "-" + getNum(1, 10);\n    }\n\n    /**\n     * \u4eceString[] \u6570\u7ec4\u4e2d\u968f\u673a\u53d6\u51fa\u5176\u4e2d\u4e00\u4e2aString\u5b57\u7b26\u4e32\n     *\n     * @param s\n     * @return\n     */\n    private static String randomOne(String[] s) {\n        return s[getNum(s.length)];\n    }\n\n    /**\n     * \u968f\u673a\u751f\u6210\u4e24\u4f4d\u6570\u7684\u5b57\u7b26\u4e32\uff0801-max\uff09,\u4e0d\u8db3\u4e24\u4f4d\u7684\u524d\u9762\u88650\n     *\n     * @param max\n     * @return\n     */\n    private static String randomCityCode(int max) {\n        int i = getNum(1, max);\n        return i > 9 ? i + "" : "0" + i;\n    }\n\n    /**\n     * \u968f\u673a\u5668[start, end]\n     *\n     * @param start\n     * @param end\n     * @return\n     */\n    private static int getNum(int start, int end) {\n        return random.nextInt(end - start + 1) + start;\n    }\n\n    /**\n     * \u968f\u673a\u5668[0, end)\n     *\n     * @param end\n     * @return\n     */\n    private static int getNum(int end) {\n        return random.nextInt(end);\n    }\n\n\n    /**\n     * \u968f\u673a\u56fe\u7247 url\uff0c\u4e0d\u4e00\u5b9a\u53ef\u7528\n     *\n     * @return\n     */\n    public static String getImg() {\n        String str = "";\n        try {\n            String urlStr = "https://www.dmoe.cc/random.php?return=json";\n            CloseableHttpClient httpClient = HttpClientBuilder.create().build();\n            HttpGet httpGet = new HttpGet(urlStr);\n            //\u83b7\u53d6\u8bf7\u6c42\u54cd\u5e94\u503c\n            CloseableHttpResponse response = httpClient.execute(httpGet);\n            //\u5c06\u8bf7\u6c42\u54cd\u5e94\u503c\u8f6c\u6362\u4e3aString\u7c7b\u578b\n            String responseString = EntityUtils.toString(response.getEntity(), "UTF-8");\n            //\u5c06String\u7c7b\u578b\u8f6c\u6362\u4e3ajson\u5bf9\u8c61\n            JSONObject responseJson = JSON.parseObject(responseString);\n            //\u83b7\u53d6\u5bf9\u5e94\u7684value\u503c\n            System.out.println(responseJson);\n            str = responseJson.get("imgurl").toString();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n\n    // \u968f\u673a\u56fe\u7247\u6d4b\u8bd5\n    @Test\n    public void testImg() {\n        System.out.println(getImg());\n    }\n\n    /**\n     * \u6570\u636e\u5c01\u88c5\n     *\n     * @return\n     */\n    public static Map<String, Object> getUserData() {\n        Map<String, Object> map = new LinkedHashMap<>();\n        String name = getChineseName();\n        String birth = getRandomBirth(9, 45);\n        String id = getRandomID();\n        int age = getAge();\n        String sex = getSex();\n        String address = getAddress();\n        String tel = getTel();\n        String email = getEmail(6, 9);\n        map.put("id", id);\n        map.put("name", name);\n        map.put("sex", sex);\n        map.put("age", age);\n        map.put("birth", birth);\n        map.put("tel", tel);\n        map.put("email", email);\n        map.put("road", address);\n        return map;\n    }\n\n\n    private static boolean isExistSex() {\n        return !name_sex.equals("");\n    }\n\n    private static boolean isExistBirthDay() {\n        return !birthDay.equals("");\n    }\n\n}\n'})}),"\n",(0,r.jsx)(e.h4,{id:"\u968f\u673a\u6c49\u5b57\u5de5\u5177\u7c7b",children:"\u968f\u673a\u6c49\u5b57\u5de5\u5177\u7c7b"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'/**\n * \u751f\u6210\u6307\u5b9a\u4f4d\u6570\u7684\u968f\u673a\u6c49\u5b57\n */\npublic class ChineseTool {\n\n    // \u4e0d\u5141\u8bb8\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\n    private ChineseTool() {\n    }\n\n    /**\n     * \u5bf9\u5916\u63d0\u4f9b\u7684\u63a5\u53e3\uff1a\u751f\u6210\u968f\u673a\u7684\u6c49\u5b57\n     *\n     * @param len \u751f\u6210\u51e0\u4f4d\u6c49\u5b57\n     * @return \u539f\u7406\u662f\u4ece\u6c49\u5b57\u533a\u4f4d\u7801\u627e\u5230\u6c49\u5b57\u3002\u5728\u6c49\u5b57\u533a\u4f4d\u7801\u4e2d\u5206\u9ad8\u4f4d\u4e0e\u5e95\u4f4d\uff0c \u4e14\u5176\u4e2d\u7b80\u4f53\u53c8\u6709\u7e41\u4f53\u3002\n     * \u539f\u7406\u662f\u4ece\u6c49\u5b57\u533a\u4f4d\u7801\u627e\u5230\u6c49\u5b57\u3002\u5728\u6c49\u5b57\u533a\u4f4d\u7801\u4e2d\u5206\u9ad8\u4f4d\u4e0e\u5e95\u4f4d\uff0c \u4e14\u5176\u4e2d\u7b80\u4f53\u53c8\u6709\u7e41\u4f53\u3002\n     * \u6240\u4ee5\u5728\u672c\u4f8b\u4e2d\u9ad8\u4f4d\u4ece171\u53d6\uff0c\u5e95\u4f4d\u4ece161\u53d6\uff0c \u53bb\u6389\u5927\u90e8\u5206\u7684\u7e41\u4f53\u548c\u751f\u50fb\u5b57\u3002\u4f46\u4ecd\u7136\u4f1a\u6709\uff01\uff01\n     */\n    public static String getRandomChinese(int len) {\n        StringBuilder result = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            String str;\n            int highPos, lowPos;   // \u5b9a\u4e49\u9ad8\u4f4e\u4f4d\n            Random random = new Random();\n            highPos = (176 + Math.abs(random.nextInt(39))); // \u83b7\u53d6\u9ad8\u4f4d\u503c\n            lowPos = (161 + Math.abs(random.nextInt(93)));  // \u83b7\u53d6\u4f4e\u4f4d\u503c\n            byte[] bytes = new byte[2];\n            bytes[0] = new Integer(highPos).byteValue();\n            bytes[1] = new Integer(lowPos).byteValue();\n            try {\n                str = new String(bytes, "GBK");   // \u8f6c\u6210\u4e2d\u6587\n                result.append(str);\n            } catch (UnsupportedEncodingException e) {\n                e.printStackTrace();\n            }\n        }\n\n        return result.toString();\n    }\n}\n\n'})})]})}function g(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>l});var i=t(6540);const r={},a=i.createContext(r);function s(n){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);