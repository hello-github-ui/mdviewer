"use strict";(self.webpackChunkmdviewer=self.webpackChunkmdviewer||[]).push([[522],{28453:(n,t,e)=>{e.d(t,{R:()=>c,x:()=>s});var r=e(96540);const i={},a=r.createContext(i);function c(n){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),r.createElement(a.Provider,{value:t},n.children)}},51152:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"\u4e2a\u4eba\u535a\u5ba2/\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570","title":"\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570","description":"\u8fd9\u9053\u9898\u4e0e\u4e0b\u9762\u8fd9\u9053\u9898\u51fa\u81ea\u4e8e\u6211\u4eca\u5929\u7684\u9762\u8bd5\uff0c\u5b9e\u73b0\u7684\u9700\u6c42\u5927\u540c\u5c0f\u5f02\u3002\u4f46\u662f\u6211\u5374\u4e0d\u4f1a\uff0c\u6ca1\u80fd\u505a\u51fa\u6765\uff0c\u8fd9\u91cc\u505a\u4e00\u4e0b\u7b14\u8bb0\u3002","source":"@site/docs/\u4e2a\u4eba\u535a\u5ba2/\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570.md","sourceDirName":"\u4e2a\u4eba\u535a\u5ba2","slug":"/\u4e2a\u4eba\u535a\u5ba2/\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570","permalink":"/mdviewer/docs/\u4e2a\u4eba\u535a\u5ba2/\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570","draft":false,"unlisted":false,"editUrl":"https://github.com/hello-github-ui/mdviewer/edit/master/docs/\u4e2a\u4eba\u535a\u5ba2/\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570.md","tags":[{"inline":true,"label":"\u4e2a\u4eba\u535a\u5ba2","permalink":"/mdviewer/docs/tags/\u4e2a\u4eba\u535a\u5ba2"}],"version":"current","frontMatter":{"id":"\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570","title":"\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570","tags":["\u4e2a\u4eba\u535a\u5ba2"]},"sidebar":"tutorialSidebar","previous":{"title":"\u7528\u7231\u53d1\u7535\u7684Google\u955c\u50cf","permalink":"/mdviewer/docs/\u4e2a\u4eba\u535a\u5ba2/\u7528\u7231\u53d1\u7535\u7684Google\u955c\u50cf"},"next":{"title":"\u7edf\u8ba1\u67d0\u4e2a\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u6587\u4ef6\u53ca\u6587\u4ef6\u5939\uff08\u5305\u62ec\u5b50\u76ee\u5f55\uff09\u7b49\u76f8\u5173\u64cd\u4f5c","permalink":"/mdviewer/docs/\u4e2a\u4eba\u535a\u5ba2/\u7edf\u8ba1\u67d0\u4e2a\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u6587\u4ef6\u53ca\u6587\u4ef6\u5939\uff08\u5305\u62ec\u5b50\u76ee\u5f55\uff09\u7b49\u76f8\u5173\u64cd\u4f5c"}}');var i=e(74848),a=e(28453);const c={id:"\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570",title:"\u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u6570\u5b57\u3001\u5b57\u6bcd\u7b49\u51fa\u73b0\u7684\u6b21\u6570",tags:["\u4e2a\u4eba\u535a\u5ba2"]},s=void 0,l={},o=[];function p(n){const t={a:"a",blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["\u8fd9\u9053\u9898\u4e0e",(0,i.jsx)(t.a,{href:"https://hello-gitee-ui.gitee.io/posts/bb6365ee/",children:"\u4e0b\u9762\u8fd9\u9053\u9898"}),"\u51fa\u81ea\u4e8e\u6211\u4eca\u5929\u7684\u9762\u8bd5\uff0c\u5b9e\u73b0\u7684\u9700\u6c42\u5927\u540c\u5c0f\u5f02\u3002\u4f46\u662f\u6211\u5374\u4e0d\u4f1a\uff0c\u6ca1\u80fd\u505a\u51fa\u6765\uff0c\u8fd9\u91cc\u505a\u4e00\u4e0b\u7b14\u8bb0\u3002"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'package com.example.study_source.pager;\n\nimport org.junit.Test;\n\nimport java.io.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n/**\n * @author 030\n * @date 19:37 2021/10/25\n * @description \u7edf\u8ba1\u67d0\u4e2a\u6587\u4ef6\u4e2d\u76ee\u6807\u5185\u5bb9\u7684\u4e2a\u6570\n */\npublic class FileStatisticsTest {\n\n    /**\n     * \u7edf\u8ba1str\u4e2d\u5305\u542b\u7684\u6570\u5b57\n     *\n     * @param str \u76ee\u6807\u5b57\u7b26\u4e32\n     * @return \u5305\u542b\u6570\u5b57\u7684\u4e2a\u6570\n     */\n    private static long getNumCnt(String str) {\n        // \u7edf\u8ba1\u4e2a\u6570\n        // \u6ce8\u610f\uff1a\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u666e\u901a\u53d8\u91cf\uff08\u5b9a\u4e49\u5728\u65b9\u6cd5\u5185\u90e8\u7684\u53d8\u91cf\uff09\uff0c\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u5e94\u7528\u65f6\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\uff1b\u5982\u4e0b\u4ee3\u7801\uff0c\u82e5\u662f\u4e0d\u521d\u59cb\u5316\u4f1a\u62a5\u9519\n        // \u5f53\u4f5c\u4e3a \u6210\u5458\u53d8\u91cf \uff08\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff09\u65f6\uff0c\u5982\u679c\u4f60\u53ea\u662f\u58f0\u660e\u5e76\u6ca1\u6709\u6ca1\u6709\u663e\u5f0f\u5730\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u65f6Java\u4f1a\u81ea\u52a8\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u8d4b\u7ed9\u9ed8\u8ba4\u503c\uff0c\n        // \u6ce8\u610f\uff1along \u53d8\u91cf\u7684\u9ed8\u8ba4\u503c\u662f 0L\n        long cnt = 0L;\n        // \u6b63\u5219\u5339\u914d\u6a21\u5f0f\n        String regex = "\\\\d";\n        Pattern p = Pattern.compile(regex);\n        Matcher matcher = p.matcher(str);\n        while (matcher.find()) {\n            cnt++;\n        }\n        return cnt;\n    }\n\n\n    /**\n     * \u7edf\u8ba1str\u4e2d\u5305\u542b\u7684\u7a7a\u683c\u4e2a\u6570\n     *\n     * @param str\n     * @return\n     */\n    private static long getSpaceCnt(String str) {\n        // \u6ce8\u610f\uff1a\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u666e\u901a\u53d8\u91cf\uff08\u5b9a\u4e49\u5728\u65b9\u6cd5\u5185\u90e8\u7684\u53d8\u91cf\uff09\uff0c\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u5e94\u7528\u65f6\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\uff1b\u5982\u4e0b\u4ee3\u7801\uff0c\u82e5\u662f\u4e0d\u521d\u59cb\u5316\u4f1a\u62a5\u9519\n        // \u5f53\u4f5c\u4e3a \u6210\u5458\u53d8\u91cf \uff08\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff09\u65f6\uff0c\u5982\u679c\u4f60\u53ea\u662f\u58f0\u660e\u5e76\u6ca1\u6709\u6ca1\u6709\u663e\u5f0f\u5730\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u65f6Java\u4f1a\u81ea\u52a8\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u8d4b\u7ed9\u9ed8\u8ba4\u503c\uff0c\n        // \u6ce8\u610f\uff1along \u53d8\u91cf\u7684\u9ed8\u8ba4\u503c\u662f 0L\n        long cnt = 0L;\n        String regex = "\\\\s";\n        Pattern p = Pattern.compile(regex);\n        Matcher matcher = p.matcher(str);\n        while (matcher.find()) {\n            cnt++;\n        }\n        return cnt;\n    }\n\n    /**\n     * \u7edf\u8ba1str\u4e2d\u5305\u542b\u7684\u6c49\u5b57\u4e2a\u6570\n     *\n     * @param str\n     * @return\n     */\n    private static long getChineseCnt(String str) {\n        // \u6ce8\u610f\uff1a\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u666e\u901a\u53d8\u91cf\uff08\u5b9a\u4e49\u5728\u65b9\u6cd5\u5185\u90e8\u7684\u53d8\u91cf\uff09\uff0c\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u5e94\u7528\u65f6\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\uff1b\u5982\u4e0b\u4ee3\u7801\uff0c\u82e5\u662f\u4e0d\u521d\u59cb\u5316\u4f1a\u62a5\u9519\n        // \u5f53\u4f5c\u4e3a \u6210\u5458\u53d8\u91cf \uff08\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff09\u65f6\uff0c\u5982\u679c\u4f60\u53ea\u662f\u58f0\u660e\u5e76\u6ca1\u6709\u6ca1\u6709\u663e\u5f0f\u5730\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u65f6Java\u4f1a\u81ea\u52a8\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u8d4b\u7ed9\u9ed8\u8ba4\u503c\uff0c\n        // \u6ce8\u610f\uff1along \u53d8\u91cf\u7684\u9ed8\u8ba4\u503c\u662f 0L\n        long cnt = 0L;\n        String regex = "[\\\\u4e00-\\\\u9fa5]";\n        Pattern p = Pattern.compile(regex);\n        Matcher matcher = p.matcher(str);\n        while (matcher.find()) {\n            cnt++;\n        }\n        return cnt;\n    }\n\n    /**\n     * \u7edf\u8ba1str\u4e2d\u5305\u542b\u7684\u5b57\u6bcd\u4e2a\u6570\n     *\n     * @param str\n     * @return\n     */\n    private static long getLetterCnt(String str) {\n        // \u6ce8\u610f\uff1a\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u666e\u901a\u53d8\u91cf\uff08\u5b9a\u4e49\u5728\u65b9\u6cd5\u5185\u90e8\u7684\u53d8\u91cf\uff09\uff0c\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u5e94\u7528\u65f6\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\uff1b\u5982\u4e0b\u4ee3\u7801\uff0c\u82e5\u662f\u4e0d\u521d\u59cb\u5316\u4f1a\u62a5\u9519\n        // \u5f53\u4f5c\u4e3a \u6210\u5458\u53d8\u91cf \uff08\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff09\u65f6\uff0c\u5982\u679c\u4f60\u53ea\u662f\u58f0\u660e\u5e76\u6ca1\u6709\u6ca1\u6709\u663e\u5f0f\u5730\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u65f6Java\u4f1a\u81ea\u52a8\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u8d4b\u7ed9\u9ed8\u8ba4\u503c\uff0c\n        // \u6ce8\u610f\uff1along \u53d8\u91cf\u7684\u9ed8\u8ba4\u503c\u662f 0L\n        long cnt = 0L;\n        String regex = "[a-zA-Z]";\n        Pattern p = Pattern.compile(regex);\n        Matcher matcher = p.matcher(str);\n        while (matcher.find()) {\n            cnt++;\n        }\n        return cnt;\n    }\n\n    /**\n     * \u7edf\u8ba1str\u4e2d\u5305\u542b\u7684\u6807\u70b9\u7b26\u53f7\u4e2a\u6570\n     *\n     * @param str\n     * @return\n     */\n    private static long getPunctuationCnt(String str) {\n        // \u6ce8\u610f\uff1a\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u666e\u901a\u53d8\u91cf\uff08\u5b9a\u4e49\u5728\u65b9\u6cd5\u5185\u90e8\u7684\u53d8\u91cf\uff09\uff0c\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u5e94\u7528\u65f6\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\uff1b\u5982\u4e0b\u4ee3\u7801\uff0c\u82e5\u662f\u4e0d\u521d\u59cb\u5316\u4f1a\u62a5\u9519\n        // \u5f53\u4f5c\u4e3a \u6210\u5458\u53d8\u91cf \uff08\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff09\u65f6\uff0c\u5982\u679c\u4f60\u53ea\u662f\u58f0\u660e\u5e76\u6ca1\u6709\u6ca1\u6709\u663e\u5f0f\u5730\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u65f6Java\u4f1a\u81ea\u52a8\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u8d4b\u7ed9\u9ed8\u8ba4\u503c\uff0c\n        // \u6ce8\u610f\uff1along \u53d8\u91cf\u7684\u9ed8\u8ba4\u503c\u662f 0L\n        long cnt = 0L;\n        String regex = "[\\\\pP\\\\p{Punct}]";\n        Pattern p = Pattern.compile(regex);\n        Matcher matcher = p.matcher(str);\n        while (matcher.find()) {\n            cnt++;\n        }\n        return cnt;\n    }\n\n    /**\n     * \u7edf\u8ba1str\u4e2d\u5305\u542b\u7684\u4efb\u610f\u5b57\u7b26\u4e2a\u6570\uff08\u5305\u62ec\u6362\u884c\u7b26\uff0c\u5982\u679c\u4e0d\u60f3\u5305\u62ec\uff0c\u53ea\u9700\u4fee\u6539\u6b63\u5219\u5373\u53ef\uff09\n     *\n     * @param str\n     * @return\n     */\n    private static long getCharCnt(String str) {\n        // \u6ce8\u610f\uff1a\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u666e\u901a\u53d8\u91cf\uff08\u5b9a\u4e49\u5728\u65b9\u6cd5\u5185\u90e8\u7684\u53d8\u91cf\uff09\uff0c\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u5e94\u7528\u65f6\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\uff1b\u5982\u4e0b\u4ee3\u7801\uff0c\u82e5\u662f\u4e0d\u521d\u59cb\u5316\u4f1a\u62a5\u9519\n        // \u5f53\u4f5c\u4e3a \u6210\u5458\u53d8\u91cf \uff08\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff09\u65f6\uff0c\u5982\u679c\u4f60\u53ea\u662f\u58f0\u660e\u5e76\u6ca1\u6709\u6ca1\u6709\u663e\u5f0f\u5730\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u65f6Java\u4f1a\u81ea\u52a8\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u8d4b\u7ed9\u9ed8\u8ba4\u503c\uff0c\n        // \u6ce8\u610f\uff1along \u53d8\u91cf\u7684\u9ed8\u8ba4\u503c\u662f 0L\n        long cnt = 0L;\n        // \u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\uff0c\u4f7f\u7528.\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u5b57\u7b26\uff0c\u4f46\u662f\u8fd9\u5176\u4e2d\u4e0d\u5305\u542b\u6362\u884c\u7b26\\n\n        // \u8981\u60f3\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5305\u542b\u6362\u884c\u7b26\u5728\u5185\u7684\u4efb\u610f\u5b57\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u51e0\u79cd\u5199\u6cd5\uff1a\n        // ([\\s\\S]*) \u6216\u8005 ([\\d\\D]*) \u6216\u8005 ([\\w\\W]*)\n        String regex = ".";\n        Pattern p = Pattern.compile(regex);\n        Matcher matcher = p.matcher(str);\n        while (matcher.find()) {\n            cnt++;\n        }\n        return cnt;\n    }\n\n\n\n    /**\n     * \u6d4b\u8bd5\uff1a\u8f93\u51fa\u76ee\u6807\u6587\u4ef6\u4e2d\u5305\u542b\u591a\u5c11\u884c\uff0c\u591a\u5c11\u4e2a\u6570\u5b57\uff0c\u591a\u5c11\u4e2a\u7a7a\u683c\uff0c\u591a\u5c11\u4e2a\u6c49\u5b57\uff0c \u591a\u5c11\u4e2a\u5b57\u6bcd\uff0c\u591a\u5c11\u4e2a\u6807\u70b9\u7b26\u53f7\uff0c\u591a\u5c11\u4e2a\u5b57\u7b26\n     * \u4ee5 txt \u6587\u4ef6\u4e3a\u4f8b\n     */\n    @Test   // \u6ce8\u610f\uff1a\u5355\u5143\u6d4b\u8bd5\u65b9\u6cd5\u4e0d\u80fd\u6709 \u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u5355\u5143\u6d4b\u8bd5\u662f\u5bf9\u6bcf\u4e2a\u72ec\u7acb\u529f\u80fd\u7684\u9a8c\u8bc1\u6d4b\u8bd5\uff0c\u6709\u8fd4\u56de\u503c\uff0c\u522b\u7684\u6d4b\u8bd5\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8c03\u7528\u4e86\uff0c\u8fd9\u6837\u4e0d\u7b26\u5408\u5355\u5143\u6d4b\u8bd5\u7684\u521d\u8877\u3002\n    public void testCnt() {\n        String filePath = "E:\\\\webp\\\\test1\\\\2.txt";\n        int lineCnt = 0, numCnt = 0, spaceCnt = 0, chineseCnt = 0, letterCnt = 0, punctuationCnt = 0, charCnt = 0;\n        try {\n            File file = new File(filePath);\n            FileReader fileReader = new FileReader(file);\n            BufferedReader bufferedReader = new BufferedReader(fileReader);\n            String strLine = "";\n            while ((strLine = bufferedReader.readLine()) != null) {\n                // \u884c\u6570\n                lineCnt++;\n                // \u6570\u5b57\u4e2a\u6570\n                numCnt += getNumCnt(strLine);\n                // \u7a7a\u683c\n                spaceCnt += getSpaceCnt(strLine);\n                // \u6c49\u5b57\n                chineseCnt += getChineseCnt(strLine);\n                // \u5b57\u6bcd\n                letterCnt += getLetterCnt(strLine);\n                // \u6807\u70b9\u7b26\u53f7\n                punctuationCnt += getPunctuationCnt(strLine);\n                // \u5b57\u7b26\n                charCnt += getCharCnt(strLine);\n            }\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        System.out.println("\u8be5\u6587\u4ef6\u603b\u5171\uff1a " + lineCnt + "\u884c\uff0c" + numCnt + " \u4e2a\u6570\u5b57\uff0c" + spaceCnt + " \u4e2a\u7a7a\u683c\uff0c" + chineseCnt + " \u4e2a\u6c49\u5b57\uff0c"\n                + letterCnt + " \u4e2a\u5b57\u6bcd\uff0c" + punctuationCnt + " \u4e2a\u6807\u70b9\u7b26\u53f7\uff0c" + charCnt + " \u4e2a\u5b57\u7b26\u3002");\n    }\n\n\n    /**************************************************\u590d\u4e60\u4e00\u4e0b\u6587\u4ef6\u590d\u5236\u64cd\u4f5c start **************************************************/\n    private void copyFile(File file) throws Exception {\n        // \u6784\u9020\u4e00\u4e2a\u8f93\u5165\u6d41\uff0c\u4ece\u786c\u76d8\u8bfb\u53d6\u5185\u5bb9\u5230\u5185\u5b58\n        FileInputStream fis = new FileInputStream(file);\n        String outputPath = "E:\\\\webp\\\\copy.txt";\n        File file1 = new File(outputPath);\n        FileOutputStream fos = new FileOutputStream(file1);\n        byte[] buffer = new byte[1024];\n        int len = 0;\n        while ((len = fis.read(buffer)) != -1) {\n            fos.write(buffer, 0, len);\n        }\n        fos.close();\n        fis.close();\n        System.out.println("finished ...");\n    }\n\n    @Test\n    public void test() throws Exception {\n        String url = "E:\\\\webp\\\\test1\\\\1.txt";\n        File file = new File(url);\n        copyFile(file);\n    }\n    /**************************************************\u590d\u4e60\u4e00\u4e0b\u6587\u4ef6\u590d\u5236\u64cd\u4f5c end **************************************************/\n}\n\n'})})]})}function u(n={}){const{wrapper:t}={...(0,a.R)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}}}]);